<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Nuxt 架構解析</title>
      <link href="2021/09/09/vue-nuxt-layout/"/>
      <url>2021/09/09/vue-nuxt-layout/</url>
      
        <content type="html"><![CDATA[<p><img src="https://imgur.com/wcFw6fe.jpg" alt="Imgur"></p><h1 id="nuxt-指令"><a href="#nuxt-指令" class="headerlink" title="nuxt 指令"></a>nuxt 指令</h1><p>在 package.json 有一些指令可以操作 nuxt</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">  &quot;dev&quot;: &quot;nuxt&quot;,</span><br><span class="line">  &quot;build&quot;: &quot;nuxt build&quot;,</span><br><span class="line">  &quot;start&quot;: &quot;nuxt start&quot;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><a id="more"></a><p><code>npm run dev</code> 開發環境時使用<br><code>npm run build</code> 打包專案，分別有 Client 端與 Server 端<br><code>npm run start</code> 用 Node.js 起一個 Server</p><h1 id="資料夾功能"><a href="#資料夾功能" class="headerlink" title="資料夾功能"></a>資料夾功能</h1><p>pages - 放頁面的地方，新增頁面後，會自動產生新頁面名稱的 router<br>layouts - 頁面共用的版型，像 header、footer 會重複的部分，可以寫在 default.vue，供每頁共用</p><p>layouts/default.vue</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span>header<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Nuxt</span> /&gt;</span>  // Nuxt 為 pages 裡面的頁面，像是 Vue Cli 的 router-view</span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span>footer<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>components - 頁面的最小單位組件<br>assets - 需要經過 Nuxt 編譯打包、壓縮的檔案，如 CSS、圖片等<br>static - 不需經過 Nuxt 編譯的檔案，如 favicon、音樂、Zip、自己寫的 json 等<br>store - 操作 Vuex 的地方<br>middleware - 進入頁面前需要做的中間層，如驗證檢查等<br>plugins - 自定義的 Global nuxt 套件，會從 nuxt.config.js 自動注入</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Nuxt 安裝及設定</title>
      <link href="2021/08/30/vue-nuxt-install/"/>
      <url>2021/08/30/vue-nuxt-install/</url>
      
        <content type="html"><![CDATA[<p><img src="https://imgur.com/mRrJH3R.jpg" alt="Imgur"></p><h1 id="安裝-Nuxt"><a href="#安裝-Nuxt" class="headerlink" title="安裝 Nuxt"></a>安裝 Nuxt</h1><p>安裝 Nuxt 前，先檢查 Nodejs 最少需要 v10.13 的版本，如小於此版本，請升級 Nodejs</p><a id="more"></a><p>以下步驟請依專案而定</p><p>安裝 nuxt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx create-nuxt-app &lt;project-name&gt;</span><br></pre></td></tr></table></figure><p>Project name: 直接 Enter</p><p>Programming language:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JavaScript</span><br></pre></td></tr></table></figure><p>Package manager:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm</span><br></pre></td></tr></table></figure><p>UI framework:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">None</span><br></pre></td></tr></table></figure><p>Nuxt.js modules: (可先安裝的功能)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Axios - Promise based HTTP client</span><br></pre></td></tr></table></figure><p>Linting tools: 直接 Enter</p><p>Testing framework: 直接 Enter</p><p>Rendering mode:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Universal (SSR / SSG)</span><br></pre></td></tr></table></figure><p>Deployment target:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Server (Node.js hosting)</span><br></pre></td></tr></table></figure><p>Development tools:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jsconfig.json (Recommended <span class="keyword">for</span> VS Code <span class="keyword">if</span> you<span class="string">&#x27;re not using typescript)</span></span><br></pre></td></tr></table></figure><p>What is your GitHub username?</p><p>Version control system:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">None</span><br></pre></td></tr></table></figure><br><h2 id="Nuxt-2-14-6-安裝出現錯誤"><a href="#Nuxt-2-14-6-安裝出現錯誤" class="headerlink" title="Nuxt 2.14.6 安裝出現錯誤"></a>Nuxt 2.14.6 安裝出現錯誤</h2><p><img src="https://imgur.com/aJWOh3A.jpg" alt="Imgur"><br>這是目前只有在 Nuxt 2.14.6 會出現錯誤，可以在 nuxt.config.js 裡面的 build 新增以下設定解決這個錯誤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">build: &#123;</span><br><span class="line">  babel: &#123;</span><br><span class="line">    plugins: [[<span class="string">&#x27;@babel/plugin-proposal-private-methods&#x27;</span>, &#123; <span class="attr">loose</span>: <span class="literal">true</span> &#125;]];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue-Nuxt </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nuxt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE 的 SSR 原理</title>
      <link href="2021/08/29/vue-SSR/"/>
      <url>2021/08/29/vue-SSR/</url>
      
        <content type="html"><![CDATA[<p><img src="https://imgur.com/mRrJH3R.jpg" alt="Imgur"><br>SPA 跟 SSR 各有好壞，因應專案需求來決定我們需要的是 SPA 還是 SSR 的網站</p><a id="more"></a><h1 id="什麼是-CSR"><a href="#什麼是-CSR" class="headerlink" title="什麼是 CSR?"></a>什麼是 CSR?</h1><p>CSR (Client-Side Rendering) 客戶端渲染，通常是講 SPA (Single Page Application)居多，SPA 指的是單頁式應用，內容交由 client 的瀏覽器去處理，HTML 透過 JavaScript 渲染上去。</p><p>優點: 減少 server 端的壓力、頁面切換速度快<br>缺點: 首屏顯示慢、SEO 較差<br>適合用在較不需 SEO 或需高頻操作的網站，如: 後台系統、活動頁面等</p><h1 id="什麼是-SSR"><a href="#什麼是-SSR" class="headerlink" title="什麼是 SSR?"></a>什麼是 SSR?</h1><p>SSR (Sever-Side Rendering) 伺服器端渲染，由 Server 端的 CPU 收到請求後，解析完整的 HTML 返回到使用者接收端，然後呈現網頁。</p><p>優點: 首屏顯示快，不用下載大量的 javascript、SEO 效果好<br>缺點: server 端承受比較大的壓力、點擊別頁時，整個畫面需重新繪製，如網路不好，使用者體驗會較差<br>適合用在很需要 SEO 的網站，如: 平台網站、新聞媒體網站</p><h1 id="什麼是-NUXT"><a href="#什麼是-NUXT" class="headerlink" title="什麼是 NUXT"></a>什麼是 NUXT</h1><p>提供 SSR 的功能、更方便去做 Vue.js 的開發的 framework</p><h1 id="Nuxt-SSR-原理解析"><a href="#Nuxt-SSR-原理解析" class="headerlink" title="Nuxt SSR 原理解析"></a>Nuxt SSR 原理解析</h1><p>Nuxt.js 是建構在 Node.js 的環境之上，要 run Nuxt 時，需要起一個 Node.js 的 server<br>Nuxt 在 bundle 時，會 bundle 兩份檔案:</p><ol><li>Server 端的檔案 =&gt; 給搜尋引擎爬蟲，提高 SEO</li><li>Client 端的檔案 =&gt; 給 User 看的檔案內容</li></ol><hr>]]></content>
      
      
      <categories>
          
          <category> Vue-Nuxt </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSR </tag>
            
            <tag> SPA </tag>
            
            <tag> Nuxt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>瀏覽器資料儲存-Cookie、LocalStorage、SessionStorage</title>
      <link href="2021/08/16/js-cookie/"/>
      <url>2021/08/16/js-cookie/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th></th><th>Cookie</th><th>LocalStorage</th><th>SessionStorage</th></tr></thead><tbody><tr><td>資料大小</td><td>≤4KB</td><td>≥5MB</td><td>≥5MB</td></tr><tr><td>生命週期</td><td>預設資料失效是關閉瀏覽器，也可以設定失效時間</td><td>不會過期，除非手動清除</td><td>每次分頁或瀏覽器關掉後就會清除</td></tr><tr><td>與 Server 溝通</td><td>每次都會攜帶在 HTTP 中，保存過多數據會帶來效能問題</td><td>僅在瀏覽器保存，不參與 Server 溝通</td><td>僅在瀏覽器保存，不參與 Server 溝通</td></tr></tbody></table><a id="more"></a><h1 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h1><p>HTTP cookie（web cookie、browser cookie）為伺服器傳送給使用者瀏覽器的一個小片段資料，通常由伺服器透過 Set-Cookie header 傳遞給瀏覽器。瀏覽器收到後會將 cookie 儲存起來，並在下一次請求回傳 cookie 至相同的伺服器。</p><p>可以在後端設定修改，資料僅在本地瀏覽器儲存。可以設定失效時間，預設為關閉瀏覽器。</p><p><strong>常見用途</strong><br>Cookie 最常見的用途之一是認證身份，例如帳號登入、購物車、遊戲分數，或任何其他伺服器應該記住的資訊，也被應用於追蹤並分析使用者行為廣告上。Cookie 也被用於客戶端的儲存方式，但由於 cookie 會被附加在每一次的 request 之中，可能會影響效能，所以如果是不需要記錄在 server 的資訊，可以改用 storage API。</p><br><h1 id="localStorage"><a href="#localStorage" class="headerlink" title="localStorage"></a>localStorage</h1><p>不會和跟隨 HTTP 請求，所以不會佔用資源，適合儲存較複雜且不敏感的資料<br>需要使用者主動刪除，否則就是永久儲存，不同瀏覽器之間不會共享資料。<br>形式：key → value<br>key 跟 value 必須是字串，如果是 object 或 number 會自動轉換成 string</p><p><strong>常見用途</strong><br>而另一方面 localStorage 代替了 Cookie 管理購物車的工作，同時也能勝任其他工作。比如說 HTML 遊戲通常會產生一些數據，localStorage 也很適合使用。</p><br><h1 id="sessionStorage"><a href="#sessionStorage" class="headerlink" title="sessionStorage"></a>sessionStorage</h1><p>臨時儲存，跟 LocalStorage 只差在-每次分頁或瀏覽器關掉後就會清除</p><p><strong>常見用途</strong><br>如果遇到一些內容特別多的表單，為了提升用戶體驗，可能要把表單頁面拆分成多個子頁面，然後按照步驟引導用戶。這時候 sessionStorage 就可以發揮出效用。</p><br><h1 id="安全考慮"><a href="#安全考慮" class="headerlink" title="安全考慮"></a>安全考慮</h1><p>並非所有數據都適合儲存在這些其中。因為只要網站中存在 XSS 注入的風險，打開控制台，就可以隨意修改值，就能對你的 localStorage 肆意妄為。所以千萬不要將敏感數據儲存在這其中。</p><br><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h2 id="cookie-1"><a href="#cookie-1" class="headerlink" title="cookie"></a>cookie</h2><h3 id="讀取-cookie"><a href="#讀取-cookie" class="headerlink" title="讀取 cookie"></a>讀取 cookie</h3><p>讀取出來是一個很長的字串，字串裡面是所有曾經儲存的 cookie，格式是 key=value，用分號 ; 分隔不同的 cookie。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">allCookies = <span class="built_in">document</span>.cookie;</span><br><span class="line"><span class="built_in">console</span>.log(allCookies);</span><br></pre></td></tr></table></figure><p>Cookie 讀取函數<br>內建的方法沒有那麼好用，通常我們會自己寫一個方便讀取個別 cookie 的函數：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parseCookie</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> cookieObj = &#123;&#125;;</span><br><span class="line">  <span class="keyword">var</span> cookieAry = <span class="built_in">document</span>.cookie.split(<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> cookie;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, l = cookieAry.length; i &lt; l; ++i) &#123;</span><br><span class="line">    cookie = jQuery.trim(cookieAry[i]);</span><br><span class="line">    cookie = cookie.split(<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line">    cookieObj[cookie[<span class="number">0</span>]] = cookie[<span class="number">1</span>];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> cookieObj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCookieByName</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> value = parseCookie()[name];</span><br><span class="line">  <span class="keyword">if</span> (value) &#123;</span><br><span class="line">    value = <span class="built_in">decodeURIComponent</span>(value);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我們就可以很方便的讀取 cookie，像是取得 username 的 cookie 只需要用 getCookieByName(‘username’)。</p><p>當我們在設定的 value 的時候，可以使用 encodeURIComponent() 這個方法來儲存內容，可以讓特殊符號 $#@*^!,這種轉換成 URI 形式，讓程式解析的時候比較不會出錯 。</p><h3 id="寫入-cookie"><a href="#寫入-cookie" class="headerlink" title="寫入 cookie"></a>寫入 cookie</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.cookie = <span class="string">&#x27;cookie3=value3&#x27;</span>;</span><br><span class="line"><span class="built_in">document</span>.cookie = newCookie;</span><br></pre></td></tr></table></figure><h3 id="參數設定"><a href="#參數設定" class="headerlink" title="參數設定"></a>參數設定</h3><p>建立 cookie 後面還可以加上這些設定：</p><p><strong>path=path</strong><br>設定能讀取到此 cookie 的路徑，例如 ;path=/ 表示讓整個網站都讀取得到，預設為目前網頁所在的路徑。</p><p><strong>domain=domain</strong><br>設定能讀取到此 cookie 的網域</p><p><strong>max-age=seconds</strong><br>設定 cookie 的存活期限，單位為秒，例如 86400 就是一天後失效。</p><p><strong>expires=date-in-GMTString-format</strong><br>設定 cookie 的存活期限，值是一個 Date.toUTCString() 格式的時間字串，這個參數在 HTTP 1.1 之後已經被 max-age 取代。</p><p><strong>secure = boolean/null</strong><br>設定 cookie 只能於 https 連線中被傳送。</p><p>設定一個新 cookie 只有 key=value 部分是必要的，其他部分都可以省略。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.cookie = <span class="string">&#x27;id=test0; Secure; Path=/; Domain=example.com&#x27;</span>;</span><br><span class="line"><span class="built_in">document</span>.cookie = <span class="string">&#x27;id=test1; Expires=Wed, 21 Oct 2015 07:28:00 GMT&#x27;</span>;</span><br><span class="line"><span class="built_in">document</span>.cookie = <span class="string">&#x27;id=test2; Max-Age=2592000&#x27;</span>;</span><br></pre></td></tr></table></figure><p>當一個 cookie 沒有設定失效時間，就是所謂的 session cookie (有設定失效時間的則稱 persistent cookie)，該 cookie 會在使用者關閉瀏覽器後被自動刪除。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 設定兩個 cookie 叫 test1, test2</span></span><br><span class="line"><span class="comment">// 在瀏覽器關閉後會自動被刪除</span></span><br><span class="line"><span class="built_in">document</span>.cookie = <span class="string">&#x27;test1=Hello&#x27;</span>;</span><br><span class="line"><span class="built_in">document</span>.cookie = <span class="string">&#x27;test2=World&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 設定一個 username cookie 裡面的值是 Bobee，儲存一個月</span></span><br><span class="line"><span class="built_in">document</span>.cookie = <span class="string">&#x27;username=Bobee; max-age=2592000; path=/&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="刪除-cookie"><a href="#刪除-cookie" class="headerlink" title="刪除 cookie"></a>刪除 cookie</h3><p>單純把你想要那個 cookies 值，設成過期就好<br>例如刪除 username 這一個 cookie：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.cookie = <span class="string">&#x27;username=; expires=Thu, 01 Jan 1970 00:00:00 GMT&#x27;</span>;</span><br></pre></td></tr></table></figure><br><h2 id="localStorage-1"><a href="#localStorage-1" class="headerlink" title="localStorage"></a>localStorage</h2><p>H5 對於 web storage 的支援很友好，使用方法很簡單</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 獲取指定 key 的本地儲存的值</span></span><br><span class="line"><span class="built_in">localStorage</span>.getItem(keyName);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 將 value 儲存到 key 欄位中</span></span><br><span class="line"><span class="keyword">var</span> keyName = sessionStorage.key;</span><br><span class="line"><span class="built_in">localStorage</span>.setItem(keyName, value);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 刪除指定 key 的本地儲存的值</span></span><br><span class="line"><span class="built_in">localStorage</span>.keyName = <span class="string">&#x27;value&#x27;</span>;</span><br><span class="line"><span class="built_in">localStorage</span>.removeItem(keyName);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清除所有的key ,value,慎用，慎用，慎用，會清除所有，會把別的網頁的儲存也刪除</span></span><br><span class="line"><span class="built_in">localStorage</span>.clear();</span><br></pre></td></tr></table></figure><br><h2 id="sessionStorage-1"><a href="#sessionStorage-1" class="headerlink" title="sessionStorage"></a>sessionStorage</h2><p>基本和 localStorage 一樣</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//獲取指定 key 的本地儲存的值</span></span><br><span class="line">sessionStorage.getItem(keyName);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 將 value 儲存到 key 欄位中</span></span><br><span class="line"><span class="keyword">var</span> keyName = sessionStorage.key;</span><br><span class="line">sessionStorage.setItem(keyName, value);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 刪除指定 key 的本地儲存的值</span></span><br><span class="line">sessionStorage.keyName = <span class="string">&#x27;value&#x27;</span>;</span><br><span class="line">sessionStorage.removeItem(keyName);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清除所有的 key, value,慎用，慎用，慎用，會清除所有，會把別的網頁的儲存也刪除</span></span><br><span class="line">sessionStorage.clear();</span><br></pre></td></tr></table></figure><br><h1 id="Storage-取物件"><a href="#Storage-取物件" class="headerlink" title="Storage 取物件"></a>Storage 取物件</h1><p>雖然我們可以透過 Storage 方法，輕鬆的將資料儲存在本地端，但是實際應用之後，我們會發現我們要儲存的資料 value，全部被轉成字串格式，因此當我們要儲存的資料為一個物件的時候就會產生一個嚴重的問題：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> string = <span class="string">&#x27;testString&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> number = <span class="number">12345</span>;</span><br><span class="line"><span class="keyword">let</span> array = [<span class="string">&#x27;asd&#x27;</span>, <span class="number">123</span>, <span class="literal">true</span>];</span><br><span class="line"><span class="keyword">let</span> object = &#123; <span class="attr">test</span>: <span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;item&#x27;</span>, string);</span><br><span class="line"><span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;item2&#x27;</span>, number);</span><br><span class="line"><span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;item3&#x27;</span>, array);</span><br><span class="line"><span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;item4&#x27;</span>, object);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;item&#x27;</span>)); <span class="comment">// testString</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;item2&#x27;</span>)); <span class="comment">// 12345</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;item3&#x27;</span>)); <span class="comment">// &#x27;asd&#x27;, 123, true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;item4&#x27;</span>)); <span class="comment">// [object Object]</span></span><br></pre></td></tr></table></figure><p>有幾種方法可以有效避開這種情況，而在本次的課題當中，我們要使用到  <code>JSON</code>  這種資料格式。JSON 全名為 JavaScript Object Notation (Javascript 物件符號)，可以把資料轉成字串型別，方便將資料於網頁與伺服器之間做傳輸，其中包含兩種方法：</p><ol><li><code>JSON.stringify()</code>：將資料轉為 JSON 格式的字串。</li><li><code>JSON.parse(myJSON)</code>：將資料由 JSON 格式字串轉回原本的資料內容及型別。</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> string = <span class="string">&#x27;testString&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> number = <span class="number">12345</span>;</span><br><span class="line"><span class="keyword">let</span> array = [<span class="string">&#x27;asd&#x27;</span>, <span class="number">123</span>, <span class="literal">true</span>];</span><br><span class="line"><span class="keyword">let</span> object = &#123; <span class="attr">test</span>: <span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;item&#x27;</span>, <span class="built_in">JSON</span>.stringify(string));</span><br><span class="line"><span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;item2&#x27;</span>, <span class="built_in">JSON</span>.stringify(number));</span><br><span class="line"><span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;item3&#x27;</span>, <span class="built_in">JSON</span>.stringify(array));</span><br><span class="line"><span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;item4&#x27;</span>, <span class="built_in">JSON</span>.stringify(object));</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">JSON</span>.parse(<span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;item&#x27;</span>))); <span class="comment">// testString</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">JSON</span>.parse(<span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;item2&#x27;</span>))); <span class="comment">// 12345</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">JSON</span>.parse(<span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;item3&#x27;</span>))); <span class="comment">// (3) [&quot;asd&quot;, 123, true]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">JSON</span>.parse(<span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;item4&#x27;</span>))); <span class="comment">// &#123;test: 1&#125;</span></span><br></pre></td></tr></table></figure><hr><h3 id="參考文獻"><a href="#參考文獻" class="headerlink" title="參考文獻:"></a>參考文獻:</h3><p><a href="https://www.fooish.com/javascript/cookie.html">JavaScript Cookie</a><br><a href="https://ithelp.ithome.com.tw/articles/10195522">LocalStorage</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cookie </tag>
            
            <tag> LocalStorage </tag>
            
            <tag> SessionStorage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP 狀態碼</title>
      <link href="2021/08/07/web-http-status-code/"/>
      <url>2021/08/07/web-http-status-code/</url>
      
        <content type="html"><![CDATA[<p><img src="https://imgur.com/8GHhzql.jpg" alt="Imgur"></p><h1 id="什麼是-HTTP-狀態碼-HTTP-Status-Codes"><a href="#什麼是-HTTP-狀態碼-HTTP-Status-Codes" class="headerlink" title="什麼是 HTTP 狀態碼(HTTP Status Codes)?"></a>什麼是 HTTP 狀態碼(HTTP Status Codes)?</h1><p>HTTP 狀態碼是伺服器對瀏覽器請求回應(HTTP Response)的狀態，由 RFC 2616 規範定義的，並得到 RFC 2518、RFC 2817、RFC 2295、RFC 2774 與 RFC 4918 等規範擴充。伺服器用一個三位數的代碼來回應瀏覽器的請求，狀態的分類可區分三個層級，第一個數字為大類、第二個數字為中類、第三個數字為小類。</p><a id="more"></a><p>了解狀態代碼以及如何使用它們將有助於快速診斷網站錯誤</p><h2 id="HTTP-狀態碼大致分成-5-類"><a href="#HTTP-狀態碼大致分成-5-類" class="headerlink" title="HTTP 狀態碼大致分成 5 類"></a>HTTP 狀態碼大致分成 5 類</h2><p>1xx Informationa - 參考資訊<br>2xx Successful - 成功<br>3xx Redirection - 重新導向<br>4xx Client Error - 用戶端錯誤<br>5xx Server Error - 伺服器錯誤</p><h3 id="1xx-Informational-參考資訊"><a href="#1xx-Informational-參考資訊" class="headerlink" title="1xx Informational 參考資訊"></a>1xx Informational 參考資訊</h3><p>這些狀態碼代表請求已被接受，需要繼續處理，這類回應是臨時回應，所以在接收一般的回應之前，用戶端應準備接收一個或多個 1xx 的回應，等待伺服器採取進一步行動。</p><p>100 Continue - 繼續執行所發出的請求<br>101 Switching Protocols - 切換通訊協定</p><h3 id="2xx-Successful-成功"><a href="#2xx-Successful-成功" class="headerlink" title="2xx Successful 成功"></a>2xx Successful 成功</h3><p>這類的狀態碼表示伺服器成功接收到用戶端的要求、理解並接受。</p><p>200 OK - 確定。用戶端要求成功<br>201 Created - 請求已經被實現<br>202 Accepted - 伺服器已接受請求，但尚未處理<br>203 Non-Authoritative Information - 非授權資訊<br>204 No Content - 無內容，伺服器成功處理了請求，沒有返回任何內容<br>205 Reset Content - 重設內容，伺服器成功處理了請求，但沒有返回任何內容。與 204 回應不同，此回應要求請求者重設文件視圖<br>206 Partial Content - 伺服器已經成功處理了部分 GET 請求<br>207 Multi-Status - 代表之後的訊息體將是一個 XML 訊息，並且可能依照之前子請求數量的不同，包含一系列獨立的回應代碼<br>208 Already Reported - DAV 繫結的成員已經在（多狀態）回應之前的部分被列舉，且未被再次包含<br>226 IM Used - 伺服器已經滿足了對資源的請求，對實體請求的一個或多個實體操作的結果表示</p><h3 id="3xx-Redirection-重新導向"><a href="#3xx-Redirection-重新導向" class="headerlink" title="3xx Redirection 重新導向"></a>3xx Redirection 重新導向</h3><p>用戶端瀏覽器必須採取進一步的操作才能完成要求。這些狀態碼用來重新導向，例如瀏覽器可能必須重新發出 HTTP Request 要求伺服器上的不同頁面。客戶端應當自動監測無限迴圈重新導向（例如：A→B→C→……→A 或 A→A），因為這會導致伺服器和客戶端大量不必要的資源消耗。按照 HTTP/1.0 版規範的建議，瀏覽器不應自動存取超過 5 次的重新導向。</p><p>300 Multiple Choices - 被請求的資源有一系列可供選擇的回饋資訊，每個都有自己特定的位址和瀏覽器驅動的商議資訊。使用者或瀏覽器能夠自行選擇一個首選的位址進行重新導向<br>301 Moved Permanently - 要求的網頁已經永久改變網址。此狀態要求用戶端未來在連結此網址時應該導向至指定的 URI<br>302 Found - 要求客戶端執行臨時重新導向<br>303 See Other - 通知用戶端使用 GET 連到另一個 URI 去查看<br>304 Not Modified - 未修改。用戶端要求該網頁時，其內容並沒有變更<br>305 Use Proxy - 要求的網頁必須透過 Server 指定的 proxy 才能查看(需透過 Location 標頭)<br>306 Switch Proxy - 在最新版的規範中，306 狀態碼已經不再被使用。最初是指「後續請求應使用指定的代理」<br>307 Temporary Redirect - 在這種情況下，請求應該與另一個 URI 重複，但後續的請求應仍使用原始的 URI。 與 302 相反，當重新發出原始請求時，不允許更改請求方法。 例如，應該使用另一個 POST 請求來重複 POST 請求</p><h3 id="4xx-Client-Error-用戶端錯誤"><a href="#4xx-Client-Error-用戶端錯誤" class="headerlink" title="4xx Client Error 用戶端錯誤"></a>4xx Client Error 用戶端錯誤</h3><p>這代表錯誤發生，且這錯誤的發生的原因跟「用戶端」有關，妨礙了伺服器的處理。例如：用戶端可能連結到不存在的頁面、用戶端的權限不足、或可能未提供有效的驗證資訊(輸入的帳號、密碼錯誤)。</p><p>400 Bad Request - 錯誤的要求<br>401 Unauthorized - 拒絕存取<br>402 Payment Required - 該狀態碼是為了將來可能的需求而預留的。該狀態碼最初的意圖可能被用作某種形式的數字現金或線上支付方案的一部分，但幾乎沒有哪家服務商使用，而且這個狀態碼通常不被使用<br>403 Forbidden - 伺服器已經理解請求，但是拒絕執行它<br>404 Not Found - 找不到，請求失敗，請求所希望得到的資源未被在伺服器上發現，但允許使用者的後續請求<br>405 Method Not Allowed - 用來存取這個頁面的 HTTP 動詞不受允許 (方法不受允許)<br>406 Not Acceptable - 用戶端瀏覽器不接受要求頁面的 MIME 類型<br>407 Proxy Authentication Required - 需要 Proxy 驗證<br>408 Request Timeout - 請求逾時<br>409 Conflict - 資源狀態衝突<br>410 Gone - 資源已不存在且無轉址資訊<br>411 Length Required - 要求的 Content-Length 沒有定義<br>412 Precondition Failed - 指定條件失敗<br>413 Request Entity Too Large - 要求的實體太大<br>414 Request-URI Too Long - 要求 URI 太長。會因伺服器或瀏覽器而異，建議 2048 字元以下比較保險<br>415 Unsupported Media Type - 不支援的媒體類型<br>416 Requested Range Not Satisfiable - 無法滿足要求的範圍<br>417 Expectation Failed - 執行失敗</p><h3 id="5xx-Server-Error-伺服器錯誤"><a href="#5xx-Server-Error-伺服器錯誤" class="headerlink" title="5xx Server Error 伺服器錯誤"></a>5xx Server Error 伺服器錯誤</h3><p>這代表錯誤發生，且這錯誤發生的原因跟「伺服器」有關。伺服器因為發生錯誤或例外狀況(Exception)而無法完成要求(Request)時，就會回應 5xx 的錯誤，且這肯定跟伺服器有關。</p><p>500 Internal Server Error - 內部伺服器錯誤。<br>501 Not Implemented – 標頭值指定未實作的設定。<br>502 Bad Gateway - Web 伺服器在作為閘道或 Proxy 時收到無效的回應。<br>503 Service Unavailable - 服務無法使用。 這是 IIS 6.0 專用的錯誤碼。<br>504 Gateway Timeout - 閘道逾時。<br>505 HTTP Version Not Supported - 不支援的 HTTP 版本。</p><hr><h3 id="參考文獻"><a href="#參考文獻" class="headerlink" title="參考文獻:"></a>參考文獻:</h3><p><a href="https://blog.poychang.net/http-status-code/">HTTP 狀態碼一覽表</a><br><a href="https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81">HTTP 狀態碼</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> 網頁程式技術探討 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTP 狀態碼 </tag>
            
            <tag> HTTP Status Codes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTPS 和 HTTP 的差別？</title>
      <link href="2021/08/07/web-https/"/>
      <url>2021/08/07/web-https/</url>
      
        <content type="html"><![CDATA[<p><img src="https://imgur.com/aJkfXyD.jpg" alt="Imgur"><br>我們在拜訪網站時，你有沒有看過這個畫面呢?<br>這是瀏覽器針對 HTTP 網址，對使用者發出的「不安全」提示，藉此來要求網站開發者盡快將網站轉為透過 HTTPS 傳輸資料</p><a id="more"></a><h1 id="HTTP-和-HTTPS-有什麼差別"><a href="#HTTP-和-HTTPS-有什麼差別" class="headerlink" title="HTTP 和 HTTPS 有什麼差別?"></a>HTTP 和 HTTPS 有什麼差別?</h1><p>兩者差了一個 S，這個 S 代表網站使用編碼協定的安全性(Secure)，HTTPS 跟 HTTP 之間的不同在於網路文字傳送協定中標準的不同</p><h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><p>超文本傳輸協定 (Hyper Text Transfer Protocol)<br>HTTP 是以 TCP 作為網路資料傳輸的方式，因為內容只規範了客戶端請求與伺服器回應的標準，在傳輸資料的過程中，因為沒有完善的安全機制，容易被惡意程式竊取，造成資料外洩。</p><h2 id="HTTPS"><a href="#HTTPS" class="headerlink" title="HTTPS"></a>HTTPS</h2><p>超文本傳輸安全協定 (Hyper Text Transfer Protocol Secure)<br>加入 <a href="https://zh.wikipedia.org/wiki/%E5%82%B3%E8%BC%B8%E5%B1%A4%E5%AE%89%E5%85%A8%E6%80%A7%E5%8D%94%E5%AE%9A">SSL/TLS</a> 協定作為安全憑證，以保密為前提為研發，可以算是 HTTP 的進階安全版，多了一道加密的手續，如此一來就算有心人士要竊取，看到的也只是加密符號或一堆亂碼而已。<br>由於加密需要運算的資料較多，導致傳遞回應較慢，後來才又發明金鑰功能，讓網路資料在進行傳輸時兼顧了安全性及傳遞速度。</p><br><h1 id="HTTPS-對-SEO-的重要性"><a href="#HTTPS-對-SEO-的重要性" class="headerlink" title="HTTPS 對 SEO 的重要性"></a>HTTPS 對 SEO 的重要性</h1><p>你可能會想說，我的網站不需要輸入帳密，也不用輸入信用卡之類的個人資料，只是純瀏覽的網頁<br>.<br>..<br>…<br><img src="https://imgur.com/GFL68vJ.jpg" alt="Imgur"><br>…<br>..<br>.<br>NONONO！這對網站會造成影響的啊！！！<br>由於安全性的考量，現今的瀏覽器會針對 HTTP 網頁特別標註為<code>不安全</code>的網站，當使用者拜訪時跳出這個訊息，有可能就隨即關閉，因此都不利於 SEO 的排名，連瀏覽器的網址列上，也會有個 icon 表示目前網站是 HTTP 或 HTTPS(加密)。</p><div style="text-align: center;">HTTP：</div><p><img src="https://imgur.com/JD476Gk.jpg" alt="HTTP"></p><br><div style="text-align: center;">HTTPS：</div><p><img src="https://imgur.com/Ov9ZxRp.jpg" alt="HTTPS"></p><br><br><p>因此，HTTPS 的網站的搜尋排名，通常都比 HTTP 網站的排名來得高。<br>基於安全性和 SEO 優化的考量，這也是為什麼現在大多數的網站都是 HTTPS 的原因。</p><hr><h3 id="參考文獻"><a href="#參考文獻" class="headerlink" title="參考文獻:"></a>參考文獻:</h3><p><a href="https://www.nss.com.tw/why-https-is-important-than-http/">為什麼 HTTPS 比 HTTP 重要？一次帶你了解兩者的差異和重要性</a><br><a href="https://buzzorange.com/techorange/2018/05/11/https-seo/">HTTP 和 HTTPS：差了一個「S」，攸關的可是你家網站 SEO 排名順序！</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> 網頁程式技術探討 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTPS </tag>
            
            <tag> HTTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>綁定 this 的方法-call / apply / bind</title>
      <link href="2021/07/31/js-call-apply-bind/"/>
      <url>2021/07/31/js-call-apply-bind/</url>
      
        <content type="html"><![CDATA[<p><img src="https://imgur.com/ZVq8tKl.jpg" alt="Imgur"></p><p>因為 this 是動態的，所以會需要一些方法，讓函式被呼叫都能有固定的 this</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cat = &#123;</span><br><span class="line">  name: <span class="string">&#x27;mimi&#x27;</span>,</span><br><span class="line">  printName: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.name);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dog = &#123;</span><br><span class="line">  name: <span class="string">&#x27;bobee&#x27;</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>我們都知道，要印出 cat 的 name，只需要調用 cat.printName();<br>但 dog 如果不新增方法，要怎麼印出 dog name 呢?<br>…<br>..<br>.</p><p><img src="https://imgur.com/i7BFQCv.png" alt="Imgur"></p><p>.<br>..<br>…<br>當然是借 cat 的來用囉 😆</p><br><h1 id="call、apply、bind"><a href="#call、apply、bind" class="headerlink" title="call、apply、bind"></a>call、apply、bind</h1><p>藉其他物件的函式，改變 this 的對象，用來強制指定 this，這三個的分別可以把他們分成兩組來看<br>call、apply 是指定 this 後直接執行<br>bind 是先指定 this，不會馬上執行，要調用時再加()執行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cat = &#123;</span><br><span class="line">  name: <span class="string">&#x27;mimi&#x27;</span>,</span><br><span class="line">  printName: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.name);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dog = &#123;</span><br><span class="line">  name: <span class="string">&#x27;bobee&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">cat.printName.call(dog); <span class="comment">// bobee</span></span><br><span class="line">cat.printName.apply(dog); <span class="comment">// bobee</span></span><br><span class="line">cat.printName.bind(dog)(); <span class="comment">// bobee</span></span><br></pre></td></tr></table></figure><p>如此一來就可以順利取得 dog 的 name</p><br><h2 id="代入參數"><a href="#代入參數" class="headerlink" title="代入參數"></a>代入參數</h2><p>代入參數時使用的方式不太一樣</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">call(物件名稱, 參數<span class="number">1</span>, 參數<span class="number">2</span>); <span class="comment">// 逗號隔開</span></span><br><span class="line">apply(物件名稱, [參數<span class="number">1</span>, 參數<span class="number">2</span>]); <span class="comment">// 用陣列代入</span></span><br><span class="line">bind(物件名稱)(參數<span class="number">1</span>, 參數<span class="number">2</span>); <span class="comment">// 在函式調用代入</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cat = &#123;</span><br><span class="line">  name: <span class="string">&#x27;mimi&#x27;</span>,</span><br><span class="line">  showAge: <span class="function"><span class="keyword">function</span> (<span class="params">num</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.name + num + <span class="string">&#x27;歲&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dog = &#123;</span><br><span class="line">  name: <span class="string">&#x27;bobee&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">cat.showAge.call(dog, <span class="number">11</span>); <span class="comment">// bobee11歲</span></span><br><span class="line">cat.showAge.apply(dog, [<span class="number">11</span>]); <span class="comment">// bobee11歲</span></span><br><span class="line">cat.showAge.bind(dog)(<span class="number">11</span>); <span class="comment">// bobee11歲</span></span><br></pre></td></tr></table></figure><br><br>有了 call、apply、bind 可以確保當前的 this 是誰，避免不小心去連結到全域物件或是不想指向的物件喔！]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> call </tag>
            
            <tag> apply </tag>
            
            <tag> bind </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6-Promise 非同步的解決方案</title>
      <link href="2021/07/29/js-promise/"/>
      <url>2021/07/29/js-promise/</url>
      
        <content type="html"><![CDATA[<p><img src="https://imgur.com/RuN7HR6.png" alt="Imgur"></p><p>由於非同步的程式沒辦法照順序執行，像是 AJAX、setTimeout 都是典型的非同步，ES6 提出了 Promise 的新物件，可以確保非同步處理完畢後，再進行下一步的動作，Promise 就是來解決非同步的程式碼。</p><a id="more"></a><h1 id="Promise-物件的三種狀態"><a href="#Promise-物件的三種狀態" class="headerlink" title="Promise 物件的三種狀態"></a>Promise 物件的三種狀態</h1><p>在建立 Promise 之前，先來了解 Promise 只會出現以下三種狀態</p><ol><li>pending 初始狀態 (進行中)</li><li>fulfilled 事件已完成，回傳 resolve 的結果</li><li>rejected 事件已失敗，回傳 rejected 的結果</li></ol><p>Promise 狀態的改變只有兩種可能<br>從 pending 變成 fulfilled<br>從 pending 變成 rejected<br>而一但狀態改變就會固定，永遠不會再改變狀態了。</p><br><h1 id="建立一個-Promise-物件"><a href="#建立一個-Promise-物件" class="headerlink" title="建立一個 Promise 物件"></a>建立一個 Promise 物件</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    resolve(<span class="string">&#x27;成功&#x27;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    reject(<span class="string">&#x27;失敗&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol><li>創建一個新 Promise 構造函數，並代入一個 function</li><li>function 代入兩個參數，這兩個參數也是函式，分別為 resolve (執行成功)、reject (執行失敗)</li><li>設定 resolve / reject 回傳方法<br>resolve() 執行成功的函式<br>reject() 執行失敗的函式</li></ol><br><h1 id="取得-Promise-結果"><a href="#取得-Promise-結果" class="headerlink" title="取得 Promise 結果"></a>取得 Promise 結果</h1><p>Promise 物件生成後，可以用 Promise 的原型方法來執行取得的結果</p><h2 id="then"><a href="#then" class="headerlink" title=".then()"></a>.then()</h2><p>綁定當 fulfilled 或 rejected 狀態時，分別要執行的函數，.then 可傳入兩個參數</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">promise.then(</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 當狀態是 fulfilled (成功) 時，執行這個函數</span></span><br><span class="line">    <span class="comment">// value 是透過 resolve() 傳進來的參數</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 當狀態是 rejected (失敗) 時，執行這個函數</span></span><br><span class="line">    <span class="comment">// error 是透過 reject() 傳進來的參數</span></span><br><span class="line">    <span class="comment">// 此參數選擇性的，不一定需要</span></span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="catch"><a href="#catch" class="headerlink" title=".catch()"></a>.catch()</h2><p>綁定當 rejected 狀態時，要執行的函數</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">promise.catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(error);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="finally"><a href="#finally" class="headerlink" title=".finally()"></a>.finally()</h2><p>不帶有任何參數，表示非同步執行完畢，無論是否正確完成，要執行的函數</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">promise</span><br><span class="line">  .then(<span class="function">(<span class="params">success</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(success);</span><br><span class="line">  &#125;)</span><br><span class="line">  .finally(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;done&#x27;</span>);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><br><h1 id="Chaining-串接"><a href="#Chaining-串接" class="headerlink" title="Chaining 串接"></a>Chaining 串接</h1><p>then、catch 執行後都會返回一個新的 Promise 物件，可以使用鏈接的方式不斷的進行<br>後面的 then 會接收前一個 then 的 return value 當作參數</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  resolve(<span class="string">&#x27;123&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">promise</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str + <span class="string">&#x27; 456&#x27;</span>;</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(str); <span class="comment">// 123456</span></span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><br><h1 id="Promise-方法介紹"><a href="#Promise-方法介紹" class="headerlink" title="Promise 方法介紹"></a>Promise 方法介紹</h1><h2 id="Promise-all-iterable"><a href="#Promise-all-iterable" class="headerlink" title="Promise.all(iterable)"></a>Promise.all(iterable)</h2><p>透過陣列的形式傳入多個 promise 函式，Promise.all 會回傳一個陣列，分別有三種情況</p><ol><li>當引數 iterable 中所有的 promises 都被實現（resolved）</li><li>引數 iterable 不含任何 promise 時，被實現</li><li>得到一個 rejected 時，第一個被 reject 的值會被傳進回 all Promise 物件的 callback</li></ol><p>當全部執行完成後回傳陣列結果，陣列的結果順序與傳入的順序一致，適合用在多支 API 要一起執行，並確保全部完成後才進行其他工作時</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p1 = <span class="built_in">Promise</span>.resolve(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p2 = <span class="number">123</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p3 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(resolve, <span class="number">100</span>, <span class="string">&#x27;foo&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">Promise</span>.all([p1, p2, p3]).then(<span class="function"><span class="keyword">function</span> (<span class="params">values</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(values); <span class="comment">// [3, 123, &quot;foo&quot;]</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br><h2 id="Promise-race-iterable"><a href="#Promise-race-iterable" class="headerlink" title="Promise.race(iterable)"></a>Promise.race(iterable)</h2><p>透過陣列的形式傳入多個 promise 函式，Promise.race 的結果為第一個最先改變狀態的 Promise 物件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(resolve, <span class="number">500</span>, <span class="string">&#x27;one&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> p2 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(resolve, <span class="number">100</span>, <span class="string">&#x27;two&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">Promise</span>.race([p1, p2]).then(<span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(value); <span class="comment">// 會顯示 &quot;two&quot;，因為 p2 比較快被 resolve</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br><h2 id="Promise-resolve-value"><a href="#Promise-resolve-value" class="headerlink" title="Promise.resolve(value)"></a>Promise.resolve(value)</h2><p>直接定義 Promise 物件 resolve 的狀態，回傳一個 Promise 物件，value 有三種可能</p><ol><li>value 為具有”then”方法的 Promise，回傳的 promise 將依其結果採取其最終狀態</li><li>value 為 promise，呼叫 Promise.resolve 之結果</li><li>其他情形都將回傳以 value 實現的 promise</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.resolve(<span class="string">&#x27;Success&#x27;</span>).then(</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;Fail&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 輸出 &quot;Success&quot;</span></span><br></pre></td></tr></table></figure><br><h2 id="Promise-reject-reason"><a href="#Promise-reject-reason" class="headerlink" title="Promise.reject(reason)"></a>Promise.reject(reason)</h2><p>回傳一個以 reason 拒絕的 Promise 物件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.reject(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;Fail&#x27;</span>)).then(</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;Success&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;Fail&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 輸出 &quot;Fail&quot;</span></span><br></pre></td></tr></table></figure><p><br><br><br>有了 Promise 非同步語法，就可以捨棄古早時期使用的 callback hell，變得更清楚直觀，程式碼可讀性更高了 👍</p><hr><h3 id="參考文獻：-Fooish-程式技術、MDN、卡斯柏’s-blog"><a href="#參考文獻：-Fooish-程式技術、MDN、卡斯柏’s-blog" class="headerlink" title="參考文獻： Fooish 程式技術、MDN、卡斯柏’s blog"></a>參考文獻： <a href="https://www.fooish.com/javascript/ES6/Promise.html">Fooish 程式技術</a>、<a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Promise/all">MDN</a>、<a href="https://wcc723.github.io/development/2020/02/16/all-new-promise/">卡斯柏’s blog</a></h3><hr>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
            <tag> promise </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搞懂JS-什麼是 closure 閉包</title>
      <link href="2021/07/25/js-closure/"/>
      <url>2021/07/25/js-closure/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/vCMSnlu.png" alt="Imgur"></p><p>閉包是由英文的 closure 直接翻譯過來的，所以從字面上看起來，可能也不知道閉包是什麼。</p><a id="more"></a><p>closure 是函式在與其語彙範疇之外被調用，也仍記得並能夠被存取的能力，可說是指向特定範疇的參考。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> bar;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> baz = foo();</span><br><span class="line">baz(); <span class="comment">// 2 closure</span></span><br></pre></td></tr></table></figure><p>bar() 函式能夠存取 foo 的內層範疇。<br>一般來說我們預期 foo() 的整個內層範疇都會消失，基本上函式離開執行環境時，也會同時將佔用的記憶體空間給釋放出來，但 closure 不會讓這件事發生，foo() 內層的範疇實際上仍在使用，因此不會消失。誰在使用它呢? 就是 bar() 函式本身。</p><br/><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">  &#125;</span><br><span class="line">  bar(baz);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params">fn</span>) </span>&#123;</span><br><span class="line">  fn(); <span class="comment">// closure</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我們將內層函式 baz 傳給了 bar，並呼叫 bar 的內層函式 fn，包覆 foo() 內層範疇的 closure 就能藉由存取 a 來觀察。</p><p>而這些到處傳遞的函式也可以是間接的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fn;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">  &#125;</span><br><span class="line">  fn = baz; <span class="comment">// 指定 baz 給全域變數</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  fn(); <span class="comment">// closure</span></span><br><span class="line">&#125;</span><br><span class="line">foo();</span><br><span class="line">bar(); <span class="comment">// 2</span></span><br></pre></td></tr></table></figure><p>不管我們使用了何種方法，將一個內層函式運送到其語彙範疇之外，它依然會保留對他原本宣告處的一個範疇參考。</p><h1 id="迴圈與-Closure"><a href="#迴圈與-Closure" class="headerlink" title="迴圈與 Closure"></a>迴圈與 Closure</h1><p>closure 最經典的範例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> <span class="title">timer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;, i * <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我們預期它會每秒印出 1、2、3、4、5，但實際上是每秒印出了五次 6!?<br>這是因為 setTimeout 在迴圈結束後才執行，因此每次都會出現 6，那到底我們程式中缺少了什麼呢?</p><p>我們想要讓迴圈每次迭代都能在該次迭代進行時捕捉到他自己的 i 的一份拷貝，然而，那些計時器函式全都是在迴圈完成後執行，所有的那五個函式，雖然都是在各自的迴圈迭代中分別定義的，但它們都會覆蓋同一個共同的全域範疇，其中實際上只有一個 i 存在。</p><p>我們需要更多已被封閉包圍的範疇，也就是說，每次迭代都需要一個新的 closure scope</p><p>解決方式 IIFE：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">  (<span class="function"><span class="keyword">function</span> (<span class="params">j</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> <span class="title">timer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(j);</span><br><span class="line">    &#125;, j * <span class="number">1000</span>);</span><br><span class="line">  &#125;)(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用 IIFE 建立專屬範疇，並有自己的變數，來放置每次迭代 i 的一份拷貝</p><h1 id="重返區塊範疇"><a href="#重返區塊範疇" class="headerlink" title="重返區塊範疇"></a>重返區塊範疇</h1><p>我們用了 IIFE 來建立專屬每次迭代的新範疇，實際上，我們需要的是各次迭代專屬的區塊範疇。<br>let 宣告會劫持一個區塊，且每次重新宣告變數 i，並將上一次迭代的結果作為這一次的初始值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> <span class="title">timer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;, i * <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>區塊範疇和 closure 攜手合作，解決了所有的問題。</p><h1 id="模組"><a href="#模組" class="headerlink" title="模組"></a>模組</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CoolModule</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> something = <span class="string">&#x27;cool&#x27;</span>;</span><br><span class="line">  <span class="keyword">var</span> another = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">doSomething</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(something);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">doAnother</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(another.join(<span class="string">&#x27;!&#x27;</span>));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    doSomething: doSomething,</span><br><span class="line">    doAnother: doAnother,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> foo = CoolModule();</span><br><span class="line">foo.doSomething(); <span class="comment">// cool</span></span><br><span class="line">foo.doAnother(); <span class="comment">// 1!2!3</span></span><br></pre></td></tr></table></figure><p>模組模式又稱揭露模組(revealing module)，可以將內層函式的資料<code>保持隱藏和私有</code>，調用時只回傳對外公開的 API，<br>這個物件回傳最終會指定給外層變數 foo，就能存取 API 的特性方法，例如 foo.doSomething()</p><p>要行使模組模式，有兩個必要條件：</p><ol><li>必須有一個外層的包含函式，而它必須至少被調用一次(每次都會建立一個新的模組實體)</li><li>這個包含函式至少得回傳一個內層函式，如此這個內層函式才能有覆蓋那個私有範疇的 closure，因此得以存取或修改那個私有狀態</li></ol><p>帶有一個函式特性的物件本身並不是一個真正的模組，從一次函式調用所回傳的物件，如果其上只有資料特性，沒有產生 closure 的函式，那它也不是一個真正的模組。</p><p>CoolModule()展示了一個獨立的模組創造器，可以被調用數次，每次都會建立一個新的模組實體。<br>如果只想要單一個實體的時候：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> foo = (<span class="function"><span class="keyword">function</span> <span class="title">CoolModule</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> something = <span class="string">&#x27;cool&#x27;</span>;</span><br><span class="line">  <span class="keyword">var</span> another = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">doSomething</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(something);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">doAnother</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(another.join(<span class="string">&#x27;!&#x27;</span>));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    doSomething: doSomething,</span><br><span class="line">    doAnother: doAnother,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line">foo.doSomething(); <span class="comment">// cool</span></span><br><span class="line">foo.doAnother(); <span class="comment">// 1!2!3</span></span><br></pre></td></tr></table></figure><p>模組函式變成了一個 IIFE，即刻調用，並將回傳值直接指定給我們單一個模組實體式別字 foo</p><p>模組只是函式，所以能夠接收參數：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CoolMoudule</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">identify</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(id);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    identify: identify,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> foo1 = CoolMoudule(<span class="string">&#x27;foo 1&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> foo2 = CoolMoudule(<span class="string">&#x27;foo 2&#x27;</span>);</span><br><span class="line"></span><br><span class="line">foo1.identify(); <span class="comment">// &quot;foo 1&quot;</span></span><br><span class="line">foo2.identify(); <span class="comment">// &quot;foo 2&quot;</span></span><br></pre></td></tr></table></figure><p>為公開 API 的回傳物件取個名稱：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> foo = (<span class="function"><span class="keyword">function</span> <span class="title">CoolModule</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// modify the public API</span></span><br><span class="line">    publicAPI.identify = identify2;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">identify1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(id);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">identify2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(id.toUpperCase());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> publicAPI = &#123;</span><br><span class="line">    change: change,</span><br><span class="line">    identify: identify1,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> publicAPI;</span><br><span class="line">&#125;)(<span class="string">&#x27;foo module&#x27;</span>);</span><br><span class="line"></span><br><span class="line">foo.identify(); <span class="comment">// foo module</span></span><br><span class="line">foo.change();</span><br><span class="line">foo.identify(); <span class="comment">// FOO MODULE</span></span><br></pre></td></tr></table></figure><p>在模組實體中保留對公開 API 物件的一個內層參考，就能夠從內部修改那個模組實體，包括新增與移除方法和特性，還有變更它們的值。</p><hr><h3 id="參考書籍：-你不知道的-JS-範疇與-Closures"><a href="#參考書籍：-你不知道的-JS-範疇與-Closures" class="headerlink" title="參考書籍： 你不知道的 JS-範疇與 Closures"></a>參考書籍： 你不知道的 JS-範疇與 Closures</h3><hr>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> closure </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6-import &amp; export 怎麼用</title>
      <link href="2021/06/15/js-import-export/"/>
      <url>2021/06/15/js-import-export/</url>
      
        <content type="html"><![CDATA[<p><img src="https://imgur.com/2Auy2fY.jpg" alt="Imgur"></p><p>ES6 推出了管理 javascript 模組的語法，透過 import、export 可以將每個檔案視為獨立模組，讓檔案不會過於龐大，且可讀性也比較高，每個系統都有相對的模組，在程式碼的管理與組織方便了許多。</p><a id="more"></a><p>要在瀏覽器中運行，我們需先在 HTML 加上模組類型</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="comment">// import要匯入的檔案</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>這樣一來，就可以開始做模組管理了！</p><h1 id="import-amp-export"><a href="#import-amp-export" class="headerlink" title="import &amp; export"></a>import &amp; export</h1><p>export 可以輸出任何類型的資料，如物件、函式與純值等，輸出又分為 default export、named export 兩種<br>import 是將 export 的檔案匯入，default export、named export 的輸入方式也稍微不太一樣，輸入的數量是沒有限制的</p><br><h2 id="default-export-預設匯出"><a href="#default-export-預設匯出" class="headerlink" title="default export(預設匯出)"></a>default export(預設匯出)</h2><p>單一輸出名稱，預設使用 export default，每一個檔案只能有一個 export default</p><h3 id="1-可以不指定變數名稱"><a href="#1-可以不指定變數名稱" class="headerlink" title="1.可以不指定變數名稱"></a>1.可以不指定變數名稱</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// export.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">&quot;bobee&quot;</span>,</span><br><span class="line">  age: <span class="number">11</span>,</span><br><span class="line">  bark: <span class="string">&quot;woof&quot;</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dog <span class="keyword">from</span> <span class="string">&quot;./export.js&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(dog.name); <span class="comment">// bobee</span></span><br></pre></td></tr></table></figure><h3 id="2-也可以指定變數名稱，-import-裡的名稱可以使用不同的名稱呼叫"><a href="#2-也可以指定變數名稱，-import-裡的名稱可以使用不同的名稱呼叫" class="headerlink" title="2.也可以指定變數名稱， import 裡的名稱可以使用不同的名稱呼叫"></a>2.也可以指定變數名稱， import 裡的名稱<code>可以</code>使用不同的名稱呼叫</h3><p>🔸 預設單筆</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// export.js</span></span><br><span class="line"><span class="keyword">const</span> dog = &#123;</span><br><span class="line">  name: <span class="string">&quot;bobee&quot;</span>,</span><br><span class="line">  age: <span class="number">11</span>,</span><br><span class="line">  bark: <span class="string">&quot;woof&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> dog;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> goodDog <span class="keyword">from</span> <span class="string">&quot;./export.js&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(goodDog.name); <span class="comment">// bobee</span></span><br></pre></td></tr></table></figure><p>🔸 預設多筆</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// export.js</span></span><br><span class="line"><span class="keyword">const</span> dog = &#123;</span><br><span class="line">  name: <span class="string">&quot;bobee&quot;</span>,</span><br><span class="line">  age: <span class="number">11</span>,</span><br><span class="line">  bark: <span class="string">&quot;woof&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123; dog, add &#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> goodDog <span class="keyword">from</span> <span class="string">&quot;./export.js&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(goodDog.dog.name); <span class="comment">// bobee</span></span><br></pre></td></tr></table></figure><br><h2 id="named-export-具名匯出"><a href="#named-export-具名匯出" class="headerlink" title="named export(具名匯出)"></a>named export(具名匯出)</h2><p>多個輸出名稱，需先宣告名稱，在 import 時必須使用一樣名稱才能匯出，即使只匯出一個名稱也需加上中括號{}</p><h3 id="1-export-每個宣告"><a href="#1-export-每個宣告" class="headerlink" title="1.export 每個宣告"></a>1.export 每個宣告</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// export.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> dog = &#123;</span><br><span class="line">  name: <span class="string">&quot;bobee&quot;</span>,</span><br><span class="line">  age: <span class="number">11</span>,</span><br><span class="line">  bark: <span class="string">&quot;woof&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; dog &#125; <span class="keyword">from</span> <span class="string">&quot;./export.js&quot;</span>; <span class="comment">// 需加上中括號&#123;&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(dog.name); <span class="comment">// bobee</span></span><br></pre></td></tr></table></figure><h3 id="2-在結尾時統一使用物件匯出-較清楚"><a href="#2-在結尾時統一使用物件匯出-較清楚" class="headerlink" title="2.在結尾時統一使用物件匯出(較清楚)"></a>2.在結尾時統一使用物件匯出(較清楚)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// export.js</span></span><br><span class="line"><span class="keyword">const</span> dog = &#123;</span><br><span class="line">  name: <span class="string">&quot;bobee&quot;</span>,</span><br><span class="line">  age: <span class="number">11</span>,</span><br><span class="line">  bark: <span class="string">&quot;woof&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> &#123; dog, add &#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; dog &#125; <span class="keyword">from</span> <span class="string">&quot;./export.js&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(dog.name); <span class="comment">// bobee</span></span><br></pre></td></tr></table></figure><br><h1 id="import-export-全部資料-使用"><a href="#import-export-全部資料-使用" class="headerlink" title="import/export 全部資料 使用*"></a>import/export 全部資料 使用*</h1><p>*代表全部的意思，並賦予一個名稱，就可以呼叫你要的東西囉!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// export.js</span></span><br><span class="line"><span class="keyword">const</span> dog = &#123;</span><br><span class="line">  name: <span class="string">&quot;bobee&quot;</span>,</span><br><span class="line">  age: <span class="number">11</span>,</span><br><span class="line">  bark: <span class="string">&quot;woof&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> &#123; dog, add &#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> myModule <span class="keyword">from</span> <span class="string">&quot;./export.js&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(myModule.dog.name); <span class="comment">// bobee</span></span><br></pre></td></tr></table></figure><br><h1 id="import-無需匯出的檔案"><a href="#import-無需匯出的檔案" class="headerlink" title="import 無需匯出的檔案"></a>import 無需匯出的檔案</h1><p>若想要單純執行某支檔案程式，則不用帶任何名稱引入即可</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;/export.js&quot;</span>;</span><br></pre></td></tr></table></figure><hr><p>有了 export 跟 import，程式碼可以被模組化，讓系統更好維護提升管理效率，<br>歡迎路過多多指教，一起學習程式吧 😀<br></p><hr>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> import </tag>
            
            <tag> export </tag>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搞懂JS-什麼是hoisting?</title>
      <link href="2021/06/14/js-hoisting/"/>
      <url>2021/06/14/js-hoisting/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/n7k7xaM.jpg" alt="Imgur"></p><p>JS 在編譯時，會將宣告的變數、函式都先存放到一個記憶體空間，很像是被提升到最前面，賦值不會跟著被提升，實際運行時，再把值塞進剛剛存放的記憶體空間裡。</p><a id="more"></a><h1 id="變數提升-Variable-hoisting"><a href="#變數提升-Variable-hoisting" class="headerlink" title="變數提升(Variable hoisting)"></a>變數提升(Variable hoisting)</h1><p>先來看個範例:<br>我 log 了一個從未宣告的變數 dog</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(dog);</span><br></pre></td></tr></table></figure><p>會出現 Uncaught ReferenceError: dog is not defined 的錯誤，這非常合理！<br><br><br>那如果先 log 出下面的變數會發生什麼事?</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(dog);</span><br><span class="line"><span class="keyword">var</span> dog = <span class="string">&quot;bobee&quot;</span>;</span><br></pre></td></tr></table></figure><br>出現了 undefined！！為什麼不是 ReferenceError: dog is not defined 呢?<br><br>這是因為宣告的變數先被存放到記憶體空間了，而賦值不會被提升，你可以想成這樣<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> dog;</span><br><span class="line"><span class="built_in">console</span>.log(dog);</span><br><span class="line">dog = <span class="string">&quot;bobee&quot;</span>;</span><br></pre></td></tr></table></figure><p>注意！var dog 並不是真的被放到最前面，而是<code>記憶體空間</code>先存放了 dog，才會繼續依照執行順序運行程式碼，因此 log 會是 undefined，在執行程式碼之前，記憶體空間會是這樣</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">globle scope: &#123;</span><br><span class="line">  dog: <span class="literal">undefined</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>在函式裡宣告的變數也會被放到 function scope 的記憶體空間<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dog</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(bark);</span><br><span class="line">  <span class="keyword">var</span> bark = <span class="string">&quot;woof&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>執行起來時會像是這樣:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dog</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> bark;</span><br><span class="line">  <span class="built_in">console</span>.log(bark);</span><br><span class="line">  bark = <span class="string">&quot;woof&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h1 id="函式提升-Function-hoisting"><a href="#函式提升-Function-hoisting" class="headerlink" title="函式提升(Function hoisting)"></a>函式提升(Function hoisting)</h1><p>函式有分為函式陳述式(具名函式)、函式表達式(匿名函式)兩種，其中函式陳述式會被提升，函式表達式不會被提升，我們來看看範例。</p><h2 id="函式陳述式"><a href="#函式陳述式" class="headerlink" title="函式陳述式"></a>函式陳述式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dog();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dog</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> bark = <span class="string">&quot;woof&quot;</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(bark);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>結果會是 woof<br>dog()放在函式之前，卻可以 log 出我們要的結果，這是 hoisting 的關係，可以想成這樣</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dog</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> bark = <span class="string">&quot;woof&quot;</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(bark);</span><br><span class="line">&#125;</span><br><span class="line">dog();</span><br></pre></td></tr></table></figure><br><h2 id="函式表達式"><a href="#函式表達式" class="headerlink" title="函式表達式"></a>函式表達式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dog();</span><br><span class="line"><span class="keyword">var</span> dog = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> bark = <span class="string">&quot;woof&quot;</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(bark);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>結果變成 Uncaught TypeError: dog is not a function</p><p>這是因為宣告的變數先被提升了，會變成這個樣子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> dog;</span><br><span class="line">dog();</span><br><span class="line">dog = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> bark = <span class="string">&quot;woof&quot;</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(bark);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>我們在呼叫 dog 時還不是個 function，因此會噴出 TypeError 的錯誤<br><br></p><h2 id="函式的-hoisting-可以輕易達成遞迴函式"><a href="#函式的-hoisting-可以輕易達成遞迴函式" class="headerlink" title="函式的 hoisting 可以輕易達成遞迴函式"></a>函式的 hoisting 可以輕易達成遞迴函式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">even</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (n === <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">return</span> odd(n - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">odd</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (n === <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">return</span> even(n - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">even(<span class="number">10</span>);</span><br></pre></td></tr></table></figure><p>我們在 even 裡面呼叫 odd，在 odd 裡面也呼叫 even，這種遞迴狀況如果沒有 hoisting 是沒辦法解決的。<br><br></p><h1 id="函式與變數同名，函式優先"><a href="#函式與變數同名，函式優先" class="headerlink" title="函式與變數同名，函式優先"></a>函式與變數同名，函式優先</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(dog); <span class="comment">// fn dog()&#123;&#125;</span></span><br><span class="line"><span class="keyword">var</span> dog;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dog</span>(<span class="params"></span>) </span>&#123;&#125;</span><br></pre></td></tr></table></figure><p>函式的優先權比變數高，如有多個函式，將會覆蓋前面的</p><br><h1 id="let-與-const-也有-hoisting"><a href="#let-與-const-也有-hoisting" class="headerlink" title="let 與 const 也有 hoisting"></a>let 與 const 也有 hoisting</h1><p>在上一篇<a href="https://happy9990929.github.io/2021/06/13/js-variable/">var, let, const 概念</a>就有講到， let、const 也是會有 hoisting 的，差別在於提升之後，var 宣告的變數會被初始化為 undefined，而 let 與 const 的宣告不會被初始化為 undefined，而且如果你在「賦值之前」就存取它，就會拋出錯誤。</p><p>在「提升之後」以及「賦值之前」這段期間被稱為「暫時死區」（Temporal Dead Zone，TDZ），可以幫助我們養成在變數還沒宣告之前，不要使用他的好習慣，讓程式碼可讀性提高。<br><br><br><br><br>hoisting 的筆記就告一段落，了解正確觀念真的很重要，歡迎路過多多指教，一起學習程式吧 😀<br></p><hr><h3 id="推薦閱讀：-我知道你懂-hoisting，可是你了解到多深？"><a href="#推薦閱讀：-我知道你懂-hoisting，可是你了解到多深？" class="headerlink" title="推薦閱讀： 我知道你懂 hoisting，可是你了解到多深？"></a>推薦閱讀： <a href="https://blog.techbridge.cc/2018/11/10/javascript-hoisting">我知道你懂 hoisting，可是你了解到多深？</a></h3><hr>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hoisting </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>var, let, const 概念</title>
      <link href="2021/06/13/js-variable/"/>
      <url>2021/06/13/js-variable/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/W5cIWBE.jpg" alt="Imgur"></p><p>ES6 提出的 let 與 const，能讓宣告變數的使用方式、型態可以更謹慎，也會限制 scope 範圍，一起來看看 var, let, const 之間有什麼差異吧！</p><a id="more"></a><h1 id="var-let-const-的差異"><a href="#var-let-const-的差異" class="headerlink" title="var, let, const 的差異"></a>var, let, const 的差異</h1><table><thead><tr><th></th><th>可以被修改</th><th>可重複宣告</th><th>作用域</th><th>hoisting（變量提升）</th><th>宣告前存取</th></tr></thead><tbody><tr><td>var</td><td>✔️ 可以</td><td>✔️ 可重複宣告並覆蓋</td><td>僅限 funciton</td><td>有 hoisting</td><td>undefine</td></tr><tr><td>let</td><td>✔️ 可以</td><td>❌ 不可</td><td>block 區塊</td><td>有 hoisting + TDZ</td><td>ReferenceError</td></tr><tr><td>const</td><td>❌ 不可</td><td>❌ 不可</td><td>block 區塊</td><td>有 hoisting + TDZ</td><td>ReferenceError</td></tr></tbody></table><h1 id="var"><a href="#var" class="headerlink" title="var"></a>var</h1><p>var 的作用域只有在<code>函式</code>區塊，在 if 或 for 迴圈是沒有作用域的，都會被當成全域使用，如有外部程式跟這些變數名稱相同時，容易發生不可預期的錯誤，或在無意間修改了不想修改的變數</p><p>在 var 宣告中會被拆成兩行，變數的宣告會提升，賦值不會提升</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">//undefine</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>等同於</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line">a = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><br>再來看看 var 的作用域<h2 id="function"><a href="#function" class="headerlink" title="function"></a>function</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">print</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line">print(); <span class="comment">// 2</span></span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><p>在函式中是有作用域的，函式外的 a 不會被覆蓋掉</p><h2 id="if"><a href="#if" class="headerlink" title="if"></a>if</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(a); <span class="comment">//2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">//2 a被覆蓋掉了</span></span><br></pre></td></tr></table></figure><h2 id="for"><a href="#for" class="headerlink" title="for"></a>for</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="number">1</span>; a &lt; <span class="number">10</span>; a++) &#123;</span><br><span class="line">  <span class="keyword">var</span> b = <span class="number">10</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(a); <span class="comment">// 1 2 3 4 5 6 7 8 9</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;a&quot;</span>, a); <span class="comment">// 10</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;b&quot;</span>, b); <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><p>在 if 跟 for 裡的變數都會被修改，b 在 global 未宣告，卻可以印出數值，證明在這邊是沒有自己的區塊的</p><p>如將此改為 let，就可以達到我們要的結果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> a = <span class="number">1</span>; a &lt; <span class="number">10</span>; a++) &#123;</span><br><span class="line">  <span class="keyword">let</span> b = <span class="number">10</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(a); <span class="comment">// 1 2 3 4 5 6 7 8 9</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;a&quot;</span>, a); <span class="comment">// 5</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;b&quot;</span>, b); <span class="comment">// b is not defined</span></span><br></pre></td></tr></table></figure><h2 id="迴圈-非同步"><a href="#迴圈-非同步" class="headerlink" title="迴圈+非同步"></a>迴圈+非同步</h2><p>預期: 印出每秒 1-9 的數字</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="number">1</span>; a &lt; <span class="number">10</span>; a++) &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a); <span class="comment">// 10(印了9次)</span></span><br><span class="line">  &#125;, a * <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>印出來的是 10，並非我們想要的結果，可以用閉包的方式解決</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="number">1</span>; a &lt; <span class="number">10</span>; a++) &#123;</span><br><span class="line">  (<span class="function"><span class="keyword">function</span> (<span class="params">b</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(b); <span class="comment">// 1 2 3 4 5 6 7 8 9</span></span><br><span class="line">    &#125;, b * <span class="number">1000</span>);</span><br><span class="line">  &#125;)(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如此一來可以出現我們要的結果，但最簡單的方式還是直接改為 let 就可以輕易的做到</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> a = <span class="number">1</span>; a &lt; <span class="number">10</span>; a++) &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a); <span class="comment">// 1 2 3 4 5 6 7 8 9</span></span><br><span class="line">  &#125;, a * <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h1 id="let-amp-const"><a href="#let-amp-const" class="headerlink" title="let &amp; const"></a>let &amp; const</h1><p>let、const 的作用域都在 block{}區塊，他們兩者最大的不同是<br>let 可以被修改的變數<br>const 不可以被修改的常數，除非是參考值(物件、陣列)</p><p>比較特別的是，let、const 有「暫時死區」（Temporal Dead Zone，TDZ）的特性，中文解釋為「時間上暫時無法達到的區域」，如果在宣告變數之前使用變數，這個變數就是存在「暫時死區」中無法存取，可以幫助我們養成在變數還沒宣告之前，不要使用他的好習慣，讓程式碼可讀性提高。<br>那 let、const 會不會有 hoisting 呢?<br>答案是: 有的! let、const 存在變數提升，但是在「提升之後」以及「賦值之前」的 TDZ 之間是不存在的。</p><h2 id="物件是參考"><a href="#物件是參考" class="headerlink" title="物件是參考"></a>物件是參考</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line">a[<span class="number">5</span>] = <span class="number">6</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"><span class="keyword">const</span> person = &#123;</span><br><span class="line">  name: <span class="string">&quot;John&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(person);</span><br></pre></td></tr></table></figure><p>const 如果為參考值(by reference)是可以被修改的<br><br><br>ES6 提出的 let 與 const，能讓宣告變數可以更謹慎，也會限制範圍，才不會造成出乎意料的結果。</p><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> var </tag>
            
            <tag> let </tag>
            
            <tag> const </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue 表單元件處理</title>
      <link href="2021/03/21/vue-form/"/>
      <url>2021/03/21/vue-form/</url>
      
        <content type="html"><![CDATA[<h1 id="表單綁定"><a href="#表單綁定" class="headerlink" title="表單綁定"></a>表單綁定</h1><p>表單開發是 Web 開發中最常見的需求之一，幾個基本的 Vue 表單處理如下</p><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>E-MAIL<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;輸入email&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;email&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>PASSWORD<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;輸入密碼&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span>我已閱讀使用者條款<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handSubmit&quot;</span>&gt;</span>送出<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ref &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> email = ref(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> password = ref(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> checkbox = ref(<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">const</span> handSubmit = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(email, password, checkbox);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123; email, password, checkbox, handSubmit &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="複選的-checkbox"><a href="#複選的-checkbox" class="headerlink" title="複選的 checkbox"></a>複選的 checkbox</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in courseslist.tags&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.tag&quot;</span>&gt;</span></span><br><span class="line">      &lt;input</span><br><span class="line">        :id=&quot;item.tag&quot;</span><br><span class="line">        type=&quot;checkbox&quot;</span><br><span class="line">        :value=&quot;item.tag&quot;</span><br><span class="line">        v-model=&quot;courseslist.listArray&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">:for</span>=<span class="string">&quot;item.tag&quot;</span>&gt;</span>&#123;&#123; item.tag &#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handSubmit&quot;</span>&gt;</span>送出<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; reactive &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> courseslist = reactive(&#123;</span><br><span class="line">      listArray: [],</span><br><span class="line">      tags: [</span><br><span class="line">        &#123; <span class="attr">tag</span>: <span class="string">&quot;JavaScript&quot;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">tag</span>: <span class="string">&quot;Html&quot;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">tag</span>: <span class="string">&quot;Css&quot;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">tag</span>: <span class="string">&quot;Html5&quot;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">tag</span>: <span class="string">&quot;Vuejs&quot;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">tag</span>: <span class="string">&quot;React&quot;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">tag</span>: <span class="string">&quot;Sass&quot;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">tag</span>: <span class="string">&quot;Css3&quot;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">tag</span>: <span class="string">&quot;Canvas&quot;</span> &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">const</span> handSubmit = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(courseslist.listArray);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123; courseslist, handSubmit &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="下拉選單-select"><a href="#下拉選單-select" class="headerlink" title="下拉選單 select"></a>下拉選單 select</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;select-box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;cityActive&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">disabled</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>請選擇縣市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">v-for</span>=<span class="string">&quot;item in twZip.city&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;item.name&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.name&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; item.name &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;areaActive&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">disabled</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>請選擇區域<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">v-for</span>=<span class="string">&quot;item in twZip.area&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;item.name&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.name&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; item.name &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handSubmit&quot;</span>&gt;</span>送出<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; onMounted, reactive, ref, watch &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> twZip = reactive(&#123; <span class="attr">city</span>: [], <span class="attr">area</span>: [] &#125;);</span><br><span class="line">    <span class="keyword">const</span> cityActive = ref(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> areaActive = ref(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    watch(cityActive, <span class="function">(<span class="params">newCity</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 透過filter把特定縣市資料拉出來</span></span><br><span class="line">      <span class="keyword">const</span> newArr = twZip.city.filter(<span class="function">(<span class="params">item</span>) =&gt;</span> item.name === newCity);</span><br><span class="line">      areaActive.value = <span class="string">&quot;&quot;</span>; <span class="comment">// 每次變換時清空，才會顯示請選擇區域</span></span><br><span class="line">      twZip.area = newArr[<span class="number">0</span>].area;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> handSubmit = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(cityActive.value);</span><br><span class="line">      <span class="built_in">console</span>.log(areaActive.value);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      axios</span><br><span class="line">        .get(<span class="string">&quot;https://vue-lessons-api.herokuapp.com/city/list&quot;</span>)</span><br><span class="line">        .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          twZip.city = res.data.twzip.city;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(error);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123; twZip, cityActive, areaActive, handSubmit &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="register-註冊"><a href="#register-註冊" class="headerlink" title="register 註冊"></a>register 註冊</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;!isRegister&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>NAME<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &lt;input</span><br><span class="line">      type=&quot;text&quot;</span><br><span class="line">      placeholder=&quot;輸入使用者名稱&quot;</span><br><span class="line">      v-model=&quot;registered.username&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;error&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;error_message.username&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; error_message.username &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>PASSWORD<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &lt;input</span><br><span class="line">      type=&quot;password&quot;</span><br><span class="line">      placeholder=&quot;輸入密碼&quot;</span><br><span class="line">      v-model=&quot;registered.password&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;error&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;error_message.password&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; error_message.password &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>E-MAIL<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;輸入email&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;registered.email&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;error&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;error_message.email&quot;</span>&gt;</span>&#123;&#123; error_message.email &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>年齡<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;輸入年齡&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;registered.age&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;boy&quot;</span> <span class="attr">value</span>=<span class="string">&quot;boy&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;registered.sex&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;boy&quot;</span>&gt;</span>boy<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;girl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;girl&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;registered.sex&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;girl&quot;</span>&gt;</span>girl<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;registered.terms&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span>我已閱讀使用者條款<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handClick&quot;</span>&gt;</span>送出<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;isRegister&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>註冊成功<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; reactive, ref &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> app = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> isRegister = ref(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">const</span> registered = reactive(&#123;</span><br><span class="line">      username: <span class="string">&quot;&quot;</span>,</span><br><span class="line">      password: <span class="string">&quot;&quot;</span>,</span><br><span class="line">      sex: <span class="string">&quot;&quot;</span>,</span><br><span class="line">      email: <span class="string">&quot;&quot;</span>,</span><br><span class="line">      age: <span class="string">&quot;&quot;</span>,</span><br><span class="line">      terms: <span class="literal">false</span>,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> error_message = reactive(&#123;&#125;);</span><br><span class="line">    <span class="keyword">const</span> handError = <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 把 error 的值傳進 error_message</span></span><br><span class="line">      <span class="built_in">Object</span>.keys(error).forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> (error_message[item] = error[item]));</span><br><span class="line">      <span class="built_in">console</span>.log(error_message);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> handClick = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      axios</span><br><span class="line">        .post(</span><br><span class="line">          <span class="string">&quot;https://vue-lessons-api.herokuapp.com/auth/registered&quot;</span>,</span><br><span class="line">          registered</span><br><span class="line">        )</span><br><span class="line">        .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          isRegister.value = <span class="literal">true</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">          handError(error.response.data.error_message);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123; registered, isRegister, handClick, error_message &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Vue.createApp(app).mount(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> axios </tag>
            
            <tag> Vue.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修飾符</title>
      <link href="2021/03/21/vue-modifiers/"/>
      <url>2021/03/21/vue-modifiers/</url>
      
        <content type="html"><![CDATA[<h1 id="事件修飾符"><a href="#事件修飾符" class="headerlink" title="事件修飾符"></a>事件修飾符</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.prevent <span class="comment">// 防止做原本預設的動作</span></span><br><span class="line">.stop <span class="comment">// 阻止事件冒泡到父元素，阻止任何父事件處理程序被執行</span></span><br><span class="line">.self <span class="comment">// 只在自己的層級處理自己的程序</span></span><br><span class="line">.once <span class="comment">// 只處理一次</span></span><br><span class="line">.native <span class="comment">// 在元件的根元素上監聽一個原生事件</span></span><br><span class="line">.sync</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="按鍵修飾符"><a href="#按鍵修飾符" class="headerlink" title="按鍵修飾符"></a>按鍵修飾符</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@keydown.enter  <span class="comment">// 按下enter做某事</span></span><br><span class="line">@keydown.a.prevent <span class="comment">// 防止A做原本預設動作</span></span><br><span class="line">@keydown<span class="number">.13</span>  <span class="comment">// 按下enter做某事，也可直接寫成keyCode碼</span></span><br></pre></td></tr></table></figure><h1 id="v-model-修飾符"><a href="#v-model-修飾符" class="headerlink" title="v-model 修飾符"></a>v-model 修飾符</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.lazy <span class="comment">// 打完文字後，焦點移出後才會反應</span></span><br><span class="line">.number <span class="comment">// 把輸入值當成數字</span></span><br><span class="line">.trim <span class="comment">// 裁掉文字前後的空格</span></span><br></pre></td></tr></table></figure><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> axios </tag>
            
            <tag> Vue.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3 setup、CSS新寫法</title>
      <link href="2021/03/21/vue-other-issues/"/>
      <url>2021/03/21/vue-other-issues/</url>
      
        <content type="html"><![CDATA[<p>Vue3 還有很多新功能官方正在進行中，目前有幾個差不多定案的新功能</p><a id="more"></a><h1 id="Script-Setup"><a href="#Script-Setup" class="headerlink" title="Script Setup"></a>Script Setup</h1><p><b>原本寫法</b></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> name = ref(<span class="string">&quot;Bobee&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      name,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>&#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><br><p><b>新寫法</b><br>直接將 Setup 寫在 script 上，不用 export、return<br>如果沒有在 template 寫變數，就自動不會 return 出來</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123;ref&#125; from <span class="string">&quot;vue&quot;</span>;</span><br><span class="line">const name = ref(<span class="string">&quot;Bobee&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>&#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h1 id="變數綁定-CSS"><a href="#變數綁定-CSS" class="headerlink" title="變數綁定 CSS"></a>變數綁定 CSS</h1><p>用 v-bind 綁定 JS 變數，可以直接變換屬性的值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from <span class="string">&quot;vue&quot;</span>;</span><br><span class="line">const name = ref(<span class="string">&quot;Bobee&quot;</span>);</span><br><span class="line">const colorBlue = ref(<span class="string">&quot;#000FFF&quot;</span>);</span><br><span class="line">const changeColor = () =&gt; &#123;</span><br><span class="line">  colorBlue.value = <span class="string">&quot;#FF0000&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>&#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeColor&quot;</span>&gt;</span>changeColor<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.title</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">v-bind</span>(colorBlue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> Composition API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Composition API 共用邏輯的封裝</title>
      <link href="2021/03/21/vue-composition-api/"/>
      <url>2021/03/21/vue-composition-api/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-處理共用邏輯的方式"><a href="#Vue-處理共用邏輯的方式" class="headerlink" title="Vue 處理共用邏輯的方式"></a>Vue 處理共用邏輯的方式</h1><p>以往用 Vue2 處理共用邏輯有幾種方式</p><p>🔸 Mixins<br>🔸 Higher-order Components ( HOC )<br>🔸 Renderless Components</p><p>但 Vue2 存在著一些問題，命名衝突、產生多餘的元件實體、資料難以追蹤來源，就會有一些狀況產生。<br>隨著 Vue3 的升級，Vue3 Composition API 解決了 Vue2 的問題</p><a id="more"></a><p>🔸 資料追蹤清晰<br>🔸 不會有命名衝突的問題<br>🔸 不需要產生多餘的元件</p><h1 id="取得-Composition-API-的值"><a href="#取得-Composition-API-的值" class="headerlink" title="取得 Composition API 的值"></a>取得 Composition API 的值</h1><p>從共用邏輯封裝的 Composition API 取值</p><h2 id="範例-顯示滑鼠座標"><a href="#範例-顯示滑鼠座標" class="headerlink" title="範例: 顯示滑鼠座標"></a>範例: 顯示滑鼠座標</h2><h3 id="封裝邏輯的-JS"><a href="#封裝邏輯的-JS" class="headerlink" title="封裝邏輯的 JS"></a>封裝邏輯的 JS</h3><p>不同 components 可能會共用的 JS</p><p>composition-api/useMousePosition.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; onMounted, onUnmounted, ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">mousePosition</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> x = ref(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">const</span> y = ref(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">const</span> positionUpdate = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    x.value = e.pageX;</span><br><span class="line">    y.value = e.pageY;</span><br><span class="line">  &#125;;</span><br><span class="line">  onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&quot;mousemove&quot;</span>, positionUpdate);</span><br><span class="line">  &#125;);</span><br><span class="line">  onUnmounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.removeEventListener(<span class="string">&quot;mousemove&quot;</span>, positionUpdate);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> &#123; x, y &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="整合封裝好的-JS"><a href="#整合封裝好的-JS" class="headerlink" title="整合封裝好的 JS"></a>整合封裝好的 JS</h3><p>所有封裝的 JS 都在 index.js 做整合，component 只需引入這支就好</p><p>composition-api/index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mousePosition &#125; <span class="keyword">from</span> <span class="string">&quot;./useMousePosition.js&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useMousePosition = mousePosition;</span><br></pre></td></tr></table></figure><br><h3 id="index-js-引入到-component"><a href="#index-js-引入到-component" class="headerlink" title="index.js 引入到 component"></a>index.js 引入到 component</h3><p>MousePosition.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useMousePosition &#125; <span class="keyword">from</span> <span class="string">&quot;@/composition-api&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; x, y &#125; = useMousePosition();</span><br><span class="line">    <span class="keyword">return</span> &#123; x, y &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Mouse Position<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>x: &#123;&#123;x&#125;&#125; y: &#123;&#123;y&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h3 id="解構取出-reactive-的物件"><a href="#解構取出-reactive-的物件" class="headerlink" title="解構取出 reactive 的物件"></a>解構取出 reactive 的物件</h3><p>組件透過解構要取出 reactive 的物件時，解構出來的變數會變成單純的變數(不具備綁定功能)，要讓 reactive 的變數被綁定有兩種方法:</p><p>1️⃣ 不使用解構，直接 return reactive 物件</p><p>composition-api/useMousePosition.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; onMounted, onUnmounted, reactive, ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">mousePosition</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> position = reactive(&#123;</span><br><span class="line">    x: <span class="number">0</span>,</span><br><span class="line">    y: <span class="number">0</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> positionUpdate = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    position.x = e.pageX;</span><br><span class="line">    position.y = e.pageY;</span><br><span class="line">  &#125;;</span><br><span class="line">  onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&quot;mousemove&quot;</span>, positionUpdate);</span><br><span class="line">  &#125;);</span><br><span class="line">  onUnmounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.removeEventListener(<span class="string">&quot;mousemove&quot;</span>, positionUpdate);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> position;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p>MousePosition.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useMousePosition &#125; <span class="keyword">from</span> <span class="string">&quot;@/composition-api&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> position = useMousePosition();</span><br><span class="line">    <span class="keyword">return</span> &#123; position &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Mouse Position<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>x: &#123;&#123; position.x &#125;&#125; y: &#123;&#123; position.y &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br><p>2️⃣ 使用 toRefs</p><p>只要把 reactive 物件用 toRefs 包起來，就可以讓解構的值具備資料綁定的效果</p><p>composition-api/useMousePosition.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; onMounted, onUnmounted, reactive, ref, toRefs &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">mousePosition</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> position = reactive(&#123;</span><br><span class="line">    x: <span class="number">0</span>,</span><br><span class="line">    y: <span class="number">0</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> positionUpdate = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    position.x = e.pageX;</span><br><span class="line">    position.y = e.pageY;</span><br><span class="line">  &#125;;</span><br><span class="line">  onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&quot;mousemove&quot;</span>, positionUpdate);</span><br><span class="line">  &#125;);</span><br><span class="line">  onUnmounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.removeEventListener(<span class="string">&quot;mousemove&quot;</span>, positionUpdate);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> toRefs(position);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p>MousePosition.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useMousePosition &#125; <span class="keyword">from</span> <span class="string">&quot;@/composition-api&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; x, y &#125; = useMousePosition();</span><br><span class="line">    <span class="keyword">return</span> &#123; x, y &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Mouse Position<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>x: &#123;&#123;x&#125;&#125; y: &#123;&#123;y&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br><p>🔡 如要 return 更多的變數可使用展開運算子的方式</p><p>useMousePosition.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; onMounted, onUnmounted, reactive, ref, toRefs &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">mousePosition</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> name = ref(<span class="string">&quot;bobee&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> position = reactive(&#123;</span><br><span class="line">    x: <span class="number">0</span>,</span><br><span class="line">    y: <span class="number">0</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> positionUpdate = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    position.x = e.pageX;</span><br><span class="line">    position.y = e.pageY;</span><br><span class="line">  &#125;;</span><br><span class="line">  onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&quot;mousemove&quot;</span>, positionUpdate);</span><br><span class="line">  &#125;);</span><br><span class="line">  onUnmounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.removeEventListener(<span class="string">&quot;mousemove&quot;</span>, positionUpdate);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> &#123; ...toRefs(position), name &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p>MousePosition.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useMousePosition &#125; <span class="keyword">from</span> <span class="string">&quot;@/composition-api&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; x, y, name &#125; = useMousePosition();</span><br><span class="line">    <span class="keyword">return</span> &#123; x, y, name &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Mouse Position<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>x: &#123;&#123;x&#125;&#125; y: &#123;&#123;y&#125;&#125; &#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>這麼一來就可以取出多個值了！</p><br><h1 id="設定-Composition-API-的值"><a href="#設定-Composition-API-的值" class="headerlink" title="設定 Composition API 的值"></a>設定 Composition API 的值</h1><h2 id="範例-點擊按鈕改變值"><a href="#範例-點擊按鈕改變值" class="headerlink" title="範例: 點擊按鈕改變值"></a>範例: 點擊按鈕改變值</h2><p>useState.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">stateAdd</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> idx = ref(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">const</span> addState = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    idx.value++;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> &#123; idx, addState &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mousePosition &#125; <span class="keyword">from</span> <span class="string">&quot;./useMousePosition.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; stateAdd &#125; <span class="keyword">from</span> <span class="string">&quot;./useState.js&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useMousePosition = mousePosition;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useState = stateAdd;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;@/composition-api&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; idx, addState &#125; = useState();</span><br><span class="line">    <span class="keyword">return</span> &#123; idx, addState &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;block&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>number: &#123;&#123;idx&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addState&quot;</span>&gt;</span>add<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>封裝的內容都是 priviate 的，即使複製兩個 components 也不會影響到各別的值</p><br><h1 id="封裝非同步處理的狀態"><a href="#封裝非同步處理的狀態" class="headerlink" title="封裝非同步處理的狀態"></a>封裝非同步處理的狀態</h1><p>useFetch.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; reactive, ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchs</span>(<span class="params">API_url = <span class="string">&quot;&quot;</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> isLoad = ref(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> fetchData = reactive(&#123; <span class="attr">data</span>: [] &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errorMsg = ref(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">  axios</span><br><span class="line">    .get(API_url)</span><br><span class="line">    .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      isLoad.value = <span class="literal">true</span>;</span><br><span class="line">      fetchData.data = res.data;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">      isLoad.value = <span class="literal">true</span>;</span><br><span class="line">      errorMsg.value = error.request.statusText;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="keyword">return</span> &#123; isLoad, fetchData, errorMsg &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mousePosition &#125; <span class="keyword">from</span> <span class="string">&quot;./useMousePosition.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; stateAdd &#125; <span class="keyword">from</span> <span class="string">&quot;./useState.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; fetchs &#125; <span class="keyword">from</span> <span class="string">&quot;./useFetch.js&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useMousePosition = mousePosition;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useState = stateAdd;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useFetch = fetchs;</span><br></pre></td></tr></table></figure><br><p>FetchData.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useFetch &#125; <span class="keyword">from</span> <span class="string">&quot;@/composition-api&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; isLoad, fetchData, errorMsg &#125; = useFetch(</span><br><span class="line">      <span class="string">&quot;https://vue-lessons-api.herokuapp.com/photo/list&quot;</span></span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">return</span> &#123; isLoad, fetchData, errorMsg &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-if</span>=<span class="string">&quot;!isLoad&quot;</span> <span class="attr">class</span>=<span class="string">&quot;loading&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../assets/load.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--errorMsg不等於空時才會出現--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-if</span>=<span class="string">&quot;errorMsg&quot;</span>&gt;</span>ERROR: &#123;&#123; errorMsg &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;isLoad&quot;</span> <span class="attr">class</span>=<span class="string">&quot;imgBlock&quot;</span>&gt;</span></span><br><span class="line">    &lt;img</span><br><span class="line">      v-for=&quot;item in fetchData.data&quot;</span><br><span class="line">      :key=&quot;item.url&quot;</span><br><span class="line">      :src=&quot;item.url&quot;</span><br><span class="line">      alt=&quot;&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> Composition API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vuex &amp; API 資料流整合</title>
      <link href="2021/03/21/vue-vuex-api-example/"/>
      <url>2021/03/21/vue-vuex-api-example/</url>
      
        <content type="html"><![CDATA[<h1 id="圖片切換範例"><a href="#圖片切換範例" class="headerlink" title="圖片切換範例"></a>圖片切換範例</h1><h2 id="API-抽離管理，清楚管理資料"><a href="#API-抽離管理，清楚管理資料" class="headerlink" title="API 抽離管理，清楚管理資料"></a>API 抽離管理，清楚管理資料</h2><p>axios create 的物件會變成 axios 的實體<br>axios interceptors 攔截器，可以做驗證檢查</p><a id="more"></a><p>@/api/photoRequest.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// create的物件會變成axios的實體</span></span><br><span class="line"><span class="keyword">const</span> photoRequest = axios.create(&#123;</span><br><span class="line">  baseURL: <span class="string">&quot;https://vue-lessons-api.herokuapp.com/&quot;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// axios 攔截器，可以做驗證檢查</span></span><br><span class="line"><span class="comment">// 發出 request以前執行</span></span><br><span class="line">photoRequest.interceptors.request.use(</span><br><span class="line">  (config) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">true</span>) <span class="keyword">throw</span> &#123; <span class="attr">response</span>: &#123; <span class="attr">data</span>: <span class="string">&quot;資料不得為空&quot;</span> &#125; &#125;;</span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">  &#125;,</span><br><span class="line">  (error) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接到 response 之前執行</span></span><br><span class="line">photoRequest.interceptors.response.use(</span><br><span class="line">  (response) =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line">    <span class="keyword">return</span> response;</span><br><span class="line">  &#125;,</span><br><span class="line">  (error) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> getPhotoRequest = <span class="function">() =&gt;</span> photoRequest.get(<span class="string">&quot;/photo/list&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="api-模組入口"><a href="#api-模組入口" class="headerlink" title="api 模組入口"></a>api 模組入口</h2><p>index.js 做各模組的分類，當成模組的入口，方便管理，components 只需引入 index.js</p><p>@/api/index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; getPhotoRequest &#125; <span class="keyword">from</span> <span class="string">&quot;./photoRequest.js&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> apiGetPhotoRequest = getPhotoRequest;</span><br></pre></td></tr></table></figure><h2 id="資料管理"><a href="#資料管理" class="headerlink" title="資料管理"></a>資料管理</h2><p>store/index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; apiGetPhotoRequest &#125; <span class="keyword">from</span> <span class="string">&quot;../api&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> createStore(&#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">    photoArr: [],</span><br><span class="line">    idx: <span class="number">0</span>,</span><br><span class="line">    isLoad: <span class="literal">false</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  actions: &#123;</span><br><span class="line">    <span class="comment">// 為確保API資料拿回再進行handImgLoad()，需回傳Promise，axios本身就是一個Promise的回傳</span></span><br><span class="line">    <span class="comment">// async / await 接近同步呼叫</span></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="title">handInit</span>(<span class="params">&#123; commit &#125;</span>)</span> &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> apiGetPhotoRequest();</span><br><span class="line">        commit(<span class="string">&quot;init&quot;</span>, res.data);</span><br><span class="line">        <span class="keyword">return</span> res.data;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(error.response.data);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 上面async等於</span></span><br><span class="line">    <span class="comment">// handInit(&#123; commit &#125;) &#123;</span></span><br><span class="line">    <span class="comment">//   const res = apiGetPhotoRequest();</span></span><br><span class="line">    <span class="comment">//   return res.then((response) =&gt; &#123;</span></span><br><span class="line">    <span class="comment">//     commit(&quot;init&quot;, response.data);</span></span><br><span class="line">    <span class="comment">//     return response.data;</span></span><br><span class="line">    <span class="comment">//   &#125;)</span></span><br><span class="line">    <span class="comment">// &#125;,</span></span><br><span class="line">    <span class="function"><span class="title">handLoadState</span>(<span class="params">&#123; commit &#125;, bool</span>)</span> &#123;</span><br><span class="line">      commit(<span class="string">&quot;loadState&quot;</span>, bool);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">handAdd</span>(<span class="params">&#123; commit &#125;</span>)</span> &#123;</span><br><span class="line">      commit(<span class="string">&quot;Add&quot;</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">handRemove</span>(<span class="params">&#123; commit &#125;</span>)</span> &#123;</span><br><span class="line">      commit(<span class="string">&quot;Remove&quot;</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">    <span class="function"><span class="title">init</span>(<span class="params">state, payload</span>)</span> &#123;</span><br><span class="line">      state.photoArr = payload;</span><br><span class="line">      <span class="built_in">console</span>.log(state.photoArr);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">loadState</span>(<span class="params">state, bool</span>)</span> &#123;</span><br><span class="line">      state.isLoad = bool;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">Add</span>(<span class="params">state</span>)</span> &#123;</span><br><span class="line">      state.idx++;</span><br><span class="line">      <span class="keyword">if</span> (state.idx &gt; state.photoArr.length - <span class="number">1</span>) &#123;</span><br><span class="line">        state.idx = <span class="number">0</span>; <span class="comment">// 大於總數量時返回第一張</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">Remove</span>(<span class="params">state</span>)</span> &#123;</span><br><span class="line">      state.idx--;</span><br><span class="line">      <span class="keyword">if</span> (state.idx &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        state.idx = state.photoArr.length - <span class="number">1</span>; <span class="comment">//小於0時返回最後一張</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  getters: &#123;</span><br><span class="line">    <span class="function"><span class="title">isLoad</span>(<span class="params">state</span>)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> state.isLoad;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">photoArr</span>(<span class="params">state</span>)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> state.photoArr;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">idx</span>(<span class="params">state</span>)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> state.idx;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="組件"><a href="#組件" class="headerlink" title="組件"></a>組件</h2><p>App.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> ImageBox <span class="keyword">from</span> <span class="string">&quot;./components/ImageBox/index.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> LoadingBar <span class="keyword">from</span> <span class="string">&quot;./components/LoadingBar.vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    LoadingBar,</span><br><span class="line">    ImageBox,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> store = useStore();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> handImgLoad = <span class="function">(<span class="params">imgArr</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line">      imgArr.forEach(<span class="function">(<span class="params">image</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> newImage = <span class="keyword">new</span> Image();</span><br><span class="line">        newImage.src = image.url;</span><br><span class="line">        newImage.onload = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">          i++;</span><br><span class="line">          store.dispatch(<span class="string">&quot;handLoadState&quot;</span>, i === imgArr.length);</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> init = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      store.dispatch(<span class="string">&quot;handInit&quot;</span>).then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        handImgLoad(res); <span class="comment">// res為handInit回傳的資料</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      init();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">LoadingBar</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ImageBox</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>loading 組件<br>components/LoadingBar.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; computed &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> store = useStore();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> isLoad = computed(<span class="function">() =&gt;</span> store.getters.isLoad);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123; isLoad &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-show</span>=<span class="string">&quot;!isLoad&quot;</span> <span class="attr">class</span>=<span class="string">&quot;load&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../assets/load.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>圖片組件<br>components/ImageBox/index.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; computed &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> ImgShow <span class="keyword">from</span> <span class="string">&quot;./ImgShow.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> ChangeBtn <span class="keyword">from</span> <span class="string">&quot;./ChangeBtn.vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    ImgShow,</span><br><span class="line">    ChangeBtn,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> store = useStore();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> isLoad = computed(<span class="function">() =&gt;</span> store.getters.isLoad);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123; isLoad &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;isLoad&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ImgShow</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ChangeBtn</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>圖片切換按鈕<br>components/ImageBox/ChangeBtn.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; computed &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> store = useStore();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> addImg = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      store.dispatch(<span class="string">&quot;handAdd&quot;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> removeImg = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      store.dispatch(<span class="string">&quot;handRemove&quot;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123; addImg, removeImg &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btnbox&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">&quot;removeImg&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>上一張<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">&quot;addImg&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>下一張<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>圖片顯示組件<br>components/ImageBox/ImgShow.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; computed &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> store = useStore();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> photoArr = computed(<span class="function">() =&gt;</span> store.getters.photoArr);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> idx = computed(<span class="function">() =&gt;</span> store.getters.idx);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123; photoArr, idx &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  &lt;img</span><br><span class="line">    class=&quot;img&quot;</span><br><span class="line">    v-for=&quot;(item, s) in photoArr&quot;</span><br><span class="line">    v-show=&quot;idx === s&quot;</span><br><span class="line">    :key=&quot;item.url&quot;</span><br><span class="line">    :src=&quot;item.url&quot;</span><br><span class="line">    alt=&quot;&quot;</span><br><span class="line">  /&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> vuex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vuex 資料流</title>
      <link href="2021/03/16/vue-vuex/"/>
      <url>2021/03/16/vue-vuex/</url>
      
        <content type="html"><![CDATA[<h1 id="什麼是-Vuex"><a href="#什麼是-Vuex" class="headerlink" title="什麼是 Vuex?"></a>什麼是 Vuex?</h1><p>Vuex 是 Vue 應用程式的狀態管理，組件常會跨結構的傳遞狀態、需要全域狀態的管理，用 Vuex 可以更容易的控管你的資料流。</p><a id="more"></a><p>沒有用Vuex<br><img src="https://i.imgur.com/yAFf3sQ.png" alt="Imgur"></p><p>使用Vuex<br><img src="https://i.imgur.com/Bogdlvu.png" alt="Imgur"></p><h1 id="Vuex-的前置作業"><a href="#Vuex-的前置作業" class="headerlink" title="Vuex 的前置作業"></a>Vuex 的前置作業</h1><p>store/index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> createStore(&#123;</span><br><span class="line">  state: &#123;&#125;,</span><br><span class="line">  actions: &#123;&#125;,</span><br><span class="line">  mutations: &#123;&#125;,</span><br><span class="line">  modules: &#123;&#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;./store&quot;</span>;</span><br><span class="line"></span><br><span class="line">createApp(App)</span><br><span class="line">  .use(store) <span class="comment">// 使用store</span></span><br><span class="line">  .mount(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="State-Getters-Mutations-Actions"><a href="#State-Getters-Mutations-Actions" class="headerlink" title="State Getters Mutations Actions"></a>State Getters Mutations Actions</h1><p>State:<br>🔸 存放資料狀態</p><p>Getters:<br>🔸 取得狀態，類似 computed 重組資料<br>🔸 components 不要直接取得 state，先用 getters 去處理資料邏輯，再回傳資料。</p><p>Mutations:<br>🔸 唯一改變 state 的方法<br>🔸 只能做同步操作，mutations 不能做非同步操作<br>🔸 mutations 需用 commit 呼叫</p><p>Actions:<br>🔸 actions 觸發 mutations，commit 會發送事件給 mutations<br>🔸 actions 才做非同步操作<br>🔸 需用 dispatch 呼叫<br>🔸 不能更改 state</p><p>流程: components ➜ dispatch ➜ <code>actions</code> ➜ commit ➜ <code>mutations</code> ➜ <code>state</code> ➜ <code>getters</code> ➜ components</p><h2 id="Vuex-範例"><a href="#Vuex-範例" class="headerlink" title="Vuex 範例"></a>Vuex 範例</h2><p>側邊選單收合</p><p>App.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> MenuBtn <span class="keyword">from</span> <span class="string">&quot;../src/components/MenuBtn.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> MenuSlid <span class="keyword">from</span> <span class="string">&quot;../src/components/MenuSlid.vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    MenuBtn,</span><br><span class="line">    MenuSlid,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">MenuBtn</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;img&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Vue logo&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./assets/logo.png&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">MenuSlid</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Microsoft JhengHei&quot;</span>, <span class="string">&quot;Heiti TC&quot;</span>, <span class="string">&quot;sans-serif&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#img</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#app</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  &gt; .content &#123;</span><br><span class="line">    <span class="selector-tag">width</span>: 100%;</span><br><span class="line">    <span class="selector-tag">height</span>: 100%;</span><br><span class="line">    <span class="selector-tag">background-image</span>: <span class="selector-tag">url</span>(&quot;<span class="selector-tag">https</span>://<span class="selector-tag">source</span><span class="selector-class">.unsplash</span><span class="selector-class">.com</span>/<span class="selector-tag">WLUHO9A_xik</span>/1600<span class="selector-tag">x900</span>&quot;);</span><br><span class="line">    <span class="selector-tag">background-size</span>: <span class="selector-tag">cover</span>;</span><br><span class="line">    <span class="selector-tag">background-position</span>: <span class="selector-tag">center</span>;</span><br><span class="line">    <span class="selector-tag">display</span>: <span class="selector-tag">flex</span>;</span><br><span class="line">    <span class="selector-tag">justify-content</span>: <span class="selector-tag">center</span>;</span><br><span class="line">    <span class="selector-tag">align-items</span>: <span class="selector-tag">center</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p>store/index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> createStore(&#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">    isOpen: <span class="literal">false</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// actions觸發mutations，commit會發送事件給mutations</span></span><br><span class="line">  actions: &#123;</span><br><span class="line">    <span class="function"><span class="title">handMenuOpen</span>(<span class="params">context</span>)</span> &#123;</span><br><span class="line">      <span class="comment">// context.state等於store的state</span></span><br><span class="line">      <span class="keyword">const</span> openBool = !context.state.isOpen;</span><br><span class="line">      <span class="comment">// 傳入openBool參數給mutations</span></span><br><span class="line">      context.commit(<span class="string">&#x27;handOpenState&#x27;</span>, openBool);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 只有mutations可以修改state</span></span><br><span class="line">  mutations: &#123;</span><br><span class="line">    <span class="comment">// 接收actions給的參數openBool，再去改變state的值</span></span><br><span class="line">    <span class="function"><span class="title">handOpenState</span>(<span class="params">state, openBool</span>)</span> &#123;</span><br><span class="line">      state.isOpen = openBool;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 類似computed重組資料，不要直接取得state，先用getters去處理資料邏輯，再回傳資料</span></span><br><span class="line">  getters: &#123;</span><br><span class="line">    <span class="function"><span class="title">isOpen</span>(<span class="params">state</span>)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> state.isOpen;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br><p>MenuSlid.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; computed &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>; <span class="comment">// 所有跟vuex有關的內容</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> store = useStore();</span><br><span class="line">    <span class="comment">// 用computed取得isOpen資料，不要把整個store return出來</span></span><br><span class="line">    <span class="keyword">const</span> isOpen = computed(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> store.getters.isOpen</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">const</span> handClickMenu = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      store.dispatch(<span class="string">&#x27;handMenuOpen&#x27;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123; handClickMenu, isOpen &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;[&#x27;menu&#x27;, &#123;open: isOpen&#125; ]&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;closeBtn&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handClickMenu&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-times fa-3x&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>abous<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>content<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>user<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>address<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br>MenuBtn.vue<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> store = useStore();</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> store = useStore();</span><br><span class="line">    <span class="comment">// 用dispatch觸發一個事件到actions</span></span><br><span class="line">    <span class="keyword">const</span> handClickMenu = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      store.dispatch(<span class="string">&#x27;handMenuOpen&#x27;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123; handClickMenu &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;menuBtn&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handClickMenu&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-bars fa-3x&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-class">.menuBtn</span> &#123;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">10</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h1 id="Vuex-結構拆分"><a href="#Vuex-結構拆分" class="headerlink" title="Vuex 結構拆分"></a>Vuex 結構拆分</h1><p>當 Vuex 內容越來越多時，可以拆分檔案，比較好管理</p><p>store/index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> state <span class="keyword">from</span> <span class="string">&#x27;./state.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> actions <span class="keyword">from</span> <span class="string">&#x27;./actions.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> mutations <span class="keyword">from</span> <span class="string">&#x27;./mutations.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> getters <span class="keyword">from</span> <span class="string">&#x27;./getters.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> createStore(&#123;</span><br><span class="line">  state, actions, mutations, getters</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>store/state.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  isOpen: <span class="literal">false</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>store/getters.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">isOpen</span>(<span class="params">state</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> state.isOpen;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>store/mutations.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">handOpenState</span>(<span class="params">state, openBool</span>)</span> &#123;</span><br><span class="line">    state.isOpen = openBool;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>store/actions.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">handMenuOpen</span>(<span class="params">context</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> openBool = !context.state.isOpen;</span><br><span class="line">    context.commit(<span class="string">&#x27;handOpenState&#x27;</span>, openBool);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Vuex-modules"><a href="#Vuex-modules" class="headerlink" title="Vuex modules"></a>Vuex modules</h1><p>module可以依照功能來區分資料<br>設定namespaced在不同的modules可以有一樣的名稱，依照modules名稱做判斷</p><p>store/Auth/index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  namespaced: <span class="literal">true</span>,</span><br><span class="line">  state: &#123;</span><br><span class="line">    token: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  actions: &#123;</span><br><span class="line">    <span class="function"><span class="title">handSetToken</span>(<span class="params">context, token</span>)</span> &#123;</span><br><span class="line">      context.commit(<span class="string">&#x27;setToken&#x27;</span>, token);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">    <span class="function"><span class="title">setToken</span>(<span class="params">state, token</span>)</span> &#123;</span><br><span class="line">      state.token = token;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  getters: &#123;</span><br><span class="line">    <span class="function"><span class="title">getToken</span>(<span class="params">state</span>)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> state.token;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useStore &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> store = useStore();</span><br><span class="line">    onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 因為設定namespaced，前面要加modules名稱Auth/</span></span><br><span class="line">      store.dispatch(<span class="string">&#x27;Auth/handSetToken&#x27;</span>, <span class="string">&#x27;aaa&#x27;</span>); </span><br><span class="line">      <span class="built_in">console</span>.log(store.getters[<span class="string">&#x27;Auth/getToken&#x27;</span>]);</span><br><span class="line">    &#125;) </span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> vuex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue 嵌套路由</title>
      <link href="2021/03/16/vue-nested-routes/"/>
      <url>2021/03/16/vue-nested-routes/</url>
      
        <content type="html"><![CDATA[<h1 id="嵌套路由-Nested-Routes"><a href="#嵌套路由-Nested-Routes" class="headerlink" title="嵌套路由(Nested Routes)"></a>嵌套路由(Nested Routes)</h1><p>父層有 router-view 可以切換，內層也有自己的 router-view 可以切換</p><a id="more"></a><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">&quot;../views/Home.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> About <span class="keyword">from</span> <span class="string">&quot;../views/About.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Changelog <span class="keyword">from</span> <span class="string">&quot;../views/About/Changelog.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> GitHub <span class="keyword">from</span> <span class="string">&quot;../views/About/GitHub.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Guide <span class="keyword">from</span> <span class="string">&quot;../views/About/Guide.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> aboutIndex <span class="keyword">from</span> <span class="string">&quot;../views/About/index.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Reference <span class="keyword">from</span> <span class="string">&quot;../views/About/Reference.vue&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">    name: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">    component: Home,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&quot;/about&quot;</span>,</span><br><span class="line">    name: <span class="string">&quot;About&quot;</span>,</span><br><span class="line">    component: About,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">&quot;&quot;</span>, <span class="comment">// children裡的路徑不需要斜線/</span></span><br><span class="line">        component: aboutIndex</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">&quot;changelog&quot;</span>,</span><br><span class="line">        component: Changelog</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">&quot;gitHub&quot;</span>,</span><br><span class="line">        component: GitHub</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">&quot;guide&quot;</span>,</span><br><span class="line">        component: Guide</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">&quot;reference&quot;</span>,</span><br><span class="line">        component: Reference</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = createRouter(&#123;</span><br><span class="line">  history: createWebHistory(process.env.BASE_URL),</span><br><span class="line">  routes,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h2 id="內層加上-router-view"><a href="#內層加上-router-view" class="headerlink" title="內層加上 router-view"></a>內層加上 router-view</h2><p>about.vue</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;about&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/about/changelog&quot;</span>&gt;</span>changelog<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/about/gitHub&quot;</span>&gt;</span>gitHub<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/about/guide&quot;</span>&gt;</span>guide<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/about/reference&quot;</span>&gt;</span>reference<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.about</span> &#123;</span><br><span class="line">  &gt; nav &#123;</span><br><span class="line">    &gt; <span class="selector-tag">a</span> &#123;</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#2c3e50</span>;</span><br><span class="line">      <span class="attribute">font-weight</span>: bold;</span><br><span class="line">      &amp;.router-link-exact-active &#123;</span><br><span class="line">        <span class="selector-tag">color</span>: <span class="selector-tag">rebeccapurple</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需注意的是，嵌套路由的router-link，class會自動產生router-link-active，router-link-active的下一層也會產生router-link-exact-active，可以利用此類別來設定active</p><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> router </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue 動態路由</title>
      <link href="2021/03/16/vue-dynamic-router/"/>
      <url>2021/03/16/vue-dynamic-router/</url>
      
        <content type="html"><![CDATA[<h1 id="設定動態網址"><a href="#設定動態網址" class="headerlink" title="設定動態網址"></a>設定動態網址</h1><a id="more"></a><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">&quot;../views/Home.vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">    name: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">    component: Home,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&quot;/about&quot;</span>,</span><br><span class="line">    name: <span class="string">&quot;About&quot;</span>,</span><br><span class="line">    component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;../views/About.vue&quot;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&quot;/courses&quot;</span>,</span><br><span class="line">    name: <span class="string">&quot;Courses&quot;</span>,</span><br><span class="line">    component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;../views/Courses/index.vue&quot;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&quot;/courses/:id&quot;</span>, <span class="comment">// 加上:id</span></span><br><span class="line">    name: <span class="string">&quot;Courses_id&quot;</span>,</span><br><span class="line">    component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;../views/Courses/_id.vue&quot;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = createRouter(&#123;</span><br><span class="line">  history: createWebHistory(process.env.BASE_URL),</span><br><span class="line">  routes,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h1 id="設定外層的nav"><a href="#設定外層的nav" class="headerlink" title="設定外層的nav"></a>設定外層的nav</h1><p>useRoute: 用來獲取網址上面的參數<br>useRouter: 提供處理轉址相關的操作API</p><p>點擊選單，會根據路由去加上active，由於動態選單不會被加上router-link-active，所以使用監聽的方式去綁定class</p><p>App.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; reactive, ref, watch &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRoute &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> route = useRoute();</span><br><span class="line">    <span class="keyword">const</span> reouteArr = reactive([<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;about&#x27;</span>, <span class="string">&#x27;courses&#x27;</span>]); <span class="comment">// 每個選單的路由</span></span><br><span class="line">    <span class="keyword">const</span> index = ref(<span class="number">0</span>);</span><br><span class="line">    watch(</span><br><span class="line">      ()=&gt;route.path, <span class="comment">// 取得現在的路由</span></span><br><span class="line">      ()=&gt;&#123;</span><br><span class="line">        reouteArr.forEach(<span class="function">(<span class="params">item, idx</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> rp = route.path.substr(<span class="number">1</span>).split(<span class="string">&#x27;/&#x27;</span>)[<span class="number">0</span>]; <span class="comment">// 移除斜線</span></span><br><span class="line">          <span class="comment">// substr() 方法返回一個字符串中從指定位置開始到指定字符數的字符。</span></span><br><span class="line">          <span class="comment">// split() 指定的字串分割，返回一個新Array</span></span><br><span class="line">          <span class="keyword">if</span> (item === rp) &#123;</span><br><span class="line">            index.value = idx;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> &#123; index &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;active:index === 0&#125;&quot;</span>&gt;</span> Home <span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    |</span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/about&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;active:index === 1&#125;&quot;</span>&gt;</span> About <span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    |</span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/courses&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;active:index === 2&#125;&quot;</span>&gt;</span> Courses <span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-view</span> /&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#app</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  <span class="attribute">-webkit-font-smoothing</span>: antialiased;</span><br><span class="line">  <span class="attribute">-moz-osx-font-smoothing</span>: grayscale;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#2c3e50</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#nav</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">30px</span>;</span><br><span class="line">  a &#123;</span><br><span class="line">    <span class="selector-tag">font-weight</span>: <span class="selector-tag">bold</span>;</span><br><span class="line">    <span class="selector-tag">color</span>: <span class="selector-id">#2c3e50</span>;</span><br><span class="line">    &amp;<span class="selector-class">.active</span> &#123;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#42b983</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h1 id="內層的選單"><a href="#內層的選單" class="headerlink" title="內層的選單"></a>內層的選單</h1><p>如要切換選單時做更多的效果可以不使用router-link<br>router.push可以指向要去的頁面<br>router.push(‘/路徑’) or router.push({ path: ‘/路徑’ })<br>router.go(-1);回上一頁</p><p>滑鼠中鍵沒辦法讓router.push跳出視窗<br>可以使用router.resolve儲存路徑，再用純JS開啟路徑的視窗</p><p>/Courses/index.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; onMounted, reactive &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> coursesList = reactive(&#123; <span class="attr">data</span>:&#123;&#125; &#125;); <span class="comment">// 儲存API回來的data</span></span><br><span class="line">    <span class="keyword">const</span> router = useRouter();</span><br><span class="line">    <span class="keyword">const</span> goNewRouter = <span class="function">(<span class="params">id</span>)=&gt;</span>&#123;</span><br><span class="line">      router.push(&#123;<span class="attr">path</span>: <span class="string">`/courses/<span class="subst">$&#123;id&#125;</span>`</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 滑鼠中鍵沒辦法讓router.push跳出視窗</span></span><br><span class="line">    <span class="keyword">const</span> openNewTab = <span class="function">(<span class="params">id</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> saveUrl = router.resolve(&#123; <span class="attr">path</span>: <span class="string">`/courses/<span class="subst">$&#123;id&#125;</span>`</span> &#125;); <span class="comment">// router.resolve可儲存路徑</span></span><br><span class="line">      <span class="built_in">window</span>.open(saveUrl.href);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    onMounted(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">      axios.get(<span class="string">&#x27;https://vue-lessons-api.herokuapp.com/courses/list&#x27;</span>).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">        coursesList.data = res.data;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      coursesList, goNewRouter, openNewTab</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>如果 @click事件有兩個就要加修飾符，才知道點的是要觸發哪一個Funtion<br>@click.left 滑鼠左鍵 @click.middle 滑鼠中鍵</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;courses&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;item in coursesList.data&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span> </span></span><br><span class="line"><span class="tag">  @<span class="attr">click.left</span>=<span class="string">&quot;goNewRouter(item.id)&quot;</span></span></span><br><span class="line"><span class="tag">  @<span class="attr">click.middle</span>=<span class="string">&quot;openNewTab(item.id)&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;item.photo&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;teacher-box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;teach-img&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;item.teacher.img&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; item.teacher.name &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>NTD: &#123;&#123; item.money &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#courses</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">50%</span>) <span class="built_in">translateY</span>(-<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.card</span> &#123;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">  <span class="attribute">align-items</span>: flex-start;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">318px</span>;</span><br><span class="line">  <span class="attribute">height</span>: auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>($color: #<span class="number">000000</span>, $alpha: <span class="number">0.2</span>);</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.7</span>;</span><br><span class="line">  <span class="attribute">transition</span>: opacity <span class="number">0.2s</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">231</span>, <span class="number">231</span>, <span class="number">231</span>);</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    <span class="selector-tag">opacity</span>: 1;</span><br><span class="line">  &#125;</span><br><span class="line">  &gt; <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.content</span> &#123;</span><br><span class="line">    &gt; h1 &#123;</span><br><span class="line">      <span class="selector-tag">font-size</span>: 14<span class="selector-tag">px</span>;</span><br><span class="line">      <span class="selector-tag">text-align</span>: <span class="selector-tag">left</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.teacher-box</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: flex;</span><br><span class="line">      <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">      <span class="attribute">align-items</span>: center;</span><br><span class="line">      <span class="attribute">margin-top</span>: <span class="number">5px</span>;</span><br><span class="line">      &gt; h2 &#123;</span><br><span class="line">        <span class="selector-tag">font-size</span>: 13<span class="selector-tag">px</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="selector-class">.teach-img</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: flex;</span><br><span class="line">        <span class="attribute">justify-content</span>: flex-start;</span><br><span class="line">        <span class="attribute">align-items</span>: center;</span><br><span class="line">        &gt; img &#123;</span><br><span class="line">          <span class="selector-tag">border-radius</span>: 25<span class="selector-tag">px</span>;</span><br><span class="line">          <span class="selector-tag">margin-right</span>: 10<span class="selector-tag">px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h1 id="設定內頁"><a href="#設定內頁" class="headerlink" title="設定內頁"></a>設定內頁</h1><p>/Courses/_id.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useRoute, useRouter &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; onMounted, onUnmounted, reactive, ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> route = useRoute();</span><br><span class="line">    <span class="keyword">const</span> router = useRouter();</span><br><span class="line">    <span class="keyword">const</span> courses = reactive(&#123; <span class="attr">data</span>:&#123;&#125; &#125;);</span><br><span class="line">    <span class="keyword">const</span> isError = ref(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">let</span> timer = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    onMounted(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">      axios.get(<span class="string">`https://vue-lessons-api.herokuapp.com/courses/<span class="subst">$&#123;route.params.id&#125;</span>`</span>)</span><br><span class="line">      .then(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">        courses.data = res.data.data[<span class="number">0</span>];</span><br><span class="line">      &#125;).catch(<span class="function"><span class="params">error</span>=&gt;</span>&#123;</span><br><span class="line">        isError.value = <span class="literal">true</span>;</span><br><span class="line">        courses.data[<span class="string">&#x27;errorMsg&#x27;</span>] = error.response.data.error_message;</span><br><span class="line">        <span class="comment">// 設定三秒會跳回原頁面</span></span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">          router.push(&#123;<span class="attr">path</span>:<span class="string">&#x27;/courses&#x27;</span>&#125;);</span><br><span class="line">          <span class="comment">// router.push(&#x27;/courses&#x27;)</span></span><br><span class="line">          <span class="comment">// router.go(-1); // 回上一頁</span></span><br><span class="line">        &#125;, <span class="number">3000</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 離開此組件要執行的動作</span></span><br><span class="line">    onUnmounted(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      courses, isError</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>物件第二層初始時會是空的(undefined)，用v-if包住，等有資料時才會出現</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;!isError&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; courses.data.name &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>NTD: &#123;&#123; courses.data.money &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;courses.data.photo&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;Object.keys(courses.data).length !== 0&quot;</span>&gt;</span><span class="comment">&lt;!--等有資料時才會出現--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;courses.data.teacher.img&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span><span class="comment">&lt;!--物件第二層初始時會是空的--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; courses.data.teacher.name &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- error_message --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-if</span>=<span class="string">&quot;isError&quot;</span>&gt;</span>&#123;&#123; courses.data.errorMsg &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> router </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue Router 網址路由</title>
      <link href="2021/03/14/vue-router/"/>
      <url>2021/03/14/vue-router/</url>
      
        <content type="html"><![CDATA[<h1 id="單頁式應用"><a href="#單頁式應用" class="headerlink" title="單頁式應用"></a>單頁式應用</h1><p>single-page application，縮寫 SPA<br>透過 JS 動態渲染當前頁面來與使用者互動，而非傳統的從伺服器重新載入整個新頁面。這種方法避免了頁面之間切換打斷用戶體驗，使應用程式更像一個桌面應用程式。</p><h1 id="router-view"><a href="#router-view" class="headerlink" title="router-view"></a>router-view</h1><p>將會改變的區塊使用 router-view 顯示</p><a id="more"></a><p>App.vue</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span> /&gt;</span></span><br></pre></td></tr></table></figure><br><h1 id="設定路由"><a href="#設定路由" class="headerlink" title="設定路由"></a>設定路由</h1><p>將 Home、404 頁面直接一進入就 import，其他頁面使用動態 import 組件，點擊該頁面時，才會載入組件。<br>動態 import 組件 build 時每個頁面會是一支獨立的 JS。<br>如全部頁面直接一進入就 import，頁面一多時會影響效能; 但如果是小專案，頁面很少時，可以直接全部 import，減少 request 的數量。<br>大網站 =&gt; 動態載入，不吃效能<br>小網站 =&gt; 直接載入，減少 request 數量</p><p>router index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">&quot;../views/Home.vue&quot;</span>; <span class="comment">// 直接 import</span></span><br><span class="line"><span class="keyword">import</span> NotFoundComponent <span class="keyword">from</span> <span class="string">&quot;../views/NotFoundComponent.vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">    name: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">    component: Home,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&quot;/rwd&quot;</span>,</span><br><span class="line">    name: <span class="string">&quot;rwd&quot;</span>,</span><br><span class="line">    component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;../views/Rwd.vue&quot;</span>), <span class="comment">// 動態 import</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&quot;/vuejs&quot;</span>,</span><br><span class="line">    name: <span class="string">&quot;vuejs&quot;</span>,</span><br><span class="line">    component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;../views/Vuejs.vue&quot;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&quot;/reactjs&quot;</span>,</span><br><span class="line">    name: <span class="string">&quot;reactjs&quot;</span>,</span><br><span class="line">    component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;../views/Reactjs.vue&quot;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&quot;/html5&quot;</span>,</span><br><span class="line">    name: <span class="string">&quot;html5&quot;</span>,</span><br><span class="line">    component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;../views/Html5.vue&quot;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&quot;/nodejs&quot;</span>,</span><br><span class="line">    name: <span class="string">&quot;nodejs&quot;</span>,</span><br><span class="line">    component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;../views/Nodejs.vue&quot;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&quot;/:pathMatch(.*)&quot;</span>, <span class="attr">component</span>: NotFoundComponent &#125;, <span class="comment">// 需放最下面，上面的path都沒有時即顯示此頁面</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = createRouter(&#123;</span><br><span class="line">  history: createWebHistory(process.env.BASE_URL),</span><br><span class="line">  routes,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><h2 id="router-例外處理-404"><a href="#router-例外處理-404" class="headerlink" title="router 例外處理(404)"></a>router 例外處理(404)</h2><p>{ path: “/:pathMatch(.*)”, component: NotFoundComponent }<br>404 頁面的 path 需放最下面，載入時會從上到下開始跑，上面的 path 都沒有 Match 時即會顯示此頁面<br></p><h2 id="History-modes"><a href="#History-modes" class="headerlink" title="History modes"></a>History modes</h2><p><b>createWebHashHistory()</b><br>會透過 # 字號來當作網址切換的操作，但是會跟錨點相撞，對 SEO 有不利的影響<br><br><b>createWebHistory()</b><br>需要跟後端搭配重新配置根目錄下的 router，還要自己配置例外處理的頁面例如 404 等</p><br><h1 id="router-link"><a href="#router-link" class="headerlink" title="router-link"></a>router-link</h1><p>設定 router-link 指向連結頁面</p><p>header.vue</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/rwd&quot;</span>&gt;</span>RWD<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/vuejs&quot;</span>&gt;</span>VUEJS<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/reactjs&quot;</span>&gt;</span>REACTJS<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/html5&quot;</span>&gt;</span>HTML5<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/nodejs&quot;</span>&gt;</span>NODEJS<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> router </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Slot 插槽</title>
      <link href="2021/03/14/vue-slot/"/>
      <url>2021/03/14/vue-slot/</url>
      
        <content type="html"><![CDATA[<h1 id="Slot-插槽"><a href="#Slot-插槽" class="headerlink" title="Slot 插槽"></a>Slot 插槽</h1><p>在子元件上面開個洞， 由外層元件將內容置放在至子層元件指定的位置中<br>可解決樣式一樣，但內容不一樣的組件</p><a id="more"></a><p>App.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> SlotsTitle <span class="keyword">from</span> <span class="string">&quot;@/components/SlotsTitle.vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    SlotsTitle,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>將組件用 html 寫法有頭有尾包起來，並用 kebab-case(全小寫&amp;dashed)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">slots-title</span>&gt;</span>Sunday<span class="tag">&lt;/<span class="name">slots-title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">slots-title</span>&gt;</span>Monday<span class="tag">&lt;/<span class="name">slots-title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">slots-title</span>&gt;</span>Tuesday<span class="tag">&lt;/<span class="name">slots-title</span>&gt;</span></span><br></pre></td></tr></table></figure><p>SlotsTitle.vue<br>父層的內容將會插入<slot></slot>之中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../assets/logo.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> Slot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定義模板 directive</title>
      <link href="2021/03/14/vue-directive/"/>
      <url>2021/03/14/vue-directive/</url>
      
        <content type="html"><![CDATA[<h1 id="全局-directive"><a href="#全局-directive" class="headerlink" title="全局 directive"></a>全局 directive</h1><p>透過 directive 可以讓每頁都使用共用語法，在 main.js 中添加全局 directive<br>directive mounted 生命週期等同於 onMounted, 但這裡為純 js 並非 vue 的週期裡，所以這樣使用</p><a id="more"></a><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> app = createApp(App);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定義變數名稱focus</span></span><br><span class="line">app.directive(<span class="string">&quot;focus&quot;</span>, &#123;</span><br><span class="line">  <span class="function"><span class="title">mounted</span>(<span class="params">el</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(el);</span><br><span class="line">    el.focus(); <span class="comment">// 有v-focus名稱的都會有focus()效果</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.mount(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><p>template</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-focus</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span> // 自定義變數名稱前面須加上前綴v-XXX</span><br></pre></td></tr></table></figure><hr><h2 id="範例-將數字轉千分位"><a href="#範例-將數字轉千分位" class="headerlink" title="範例: 將數字轉千分位"></a>範例: 將數字轉千分位</h2><p>tool.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> numPrice = <span class="function">(<span class="params">num</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> n = num + <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">const</span> numArr = n.split(<span class="string">&quot;&quot;</span>).reverse();</span><br><span class="line">  <span class="keyword">const</span> overArr = [];</span><br><span class="line">  <span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line">  numArr.forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">    i++;</span><br><span class="line">    <span class="keyword">if</span> (i &gt; <span class="number">3</span>) &#123;</span><br><span class="line">      i = <span class="number">1</span>;</span><br><span class="line">      overArr.push(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    overArr.push(item);</span><br><span class="line">  &#125;);</span><br><span class="line">  overArr.reverse();</span><br><span class="line">  <span class="keyword">return</span> overArr.join(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>main.js<br>mounted(el, val) // 第二個參數為 v-xxx=”丟進去的值”</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; numPrice &#125; <span class="keyword">from</span> <span class="string">&quot;@/lib/tools.js&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> app = createApp(App);</span><br><span class="line"></span><br><span class="line">app.directive(<span class="string">&quot;price&quot;</span>, &#123;</span><br><span class="line">  <span class="function"><span class="title">mounted</span>(<span class="params">el, binding</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> p = numPrice(binding.value);</span><br><span class="line">    el.innerHTML = p;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.mount(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><p>template</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-price</span>=<span class="string">&quot;15555000&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="加上-v-model-時需-updated"><a href="#加上-v-model-時需-updated" class="headerlink" title="加上 v-model 時需 updated"></a>加上 v-model 時需 updated</h3><p>因為 mounted 只會執行一次，如需動態綁定，需再加上 updated<br>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">app.directive(<span class="string">&quot;price&quot;</span>, &#123;</span><br><span class="line">  <span class="function"><span class="title">mounted</span>(<span class="params">el, binding</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> p = numPrice(binding.value);</span><br><span class="line">    el.innerHTML = p;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">updated</span>(<span class="params">el, binding</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> p = numPrice(binding.value);</span><br><span class="line">    el.innerHTML = p;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>components</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> num = ref(<span class="number">1233211234567</span>);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      num,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;num&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-price</span>=<span class="string">&quot;num&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> directive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>透過ref綁定，取得DOM元素</title>
      <link href="2021/03/14/vue-template-refs/"/>
      <url>2021/03/14/vue-template-refs/</url>
      
        <content type="html"><![CDATA[<h1 id="透過-ref-綁定，取得-DOM-元素"><a href="#透過-ref-綁定，取得-DOM-元素" class="headerlink" title="透過 ref 綁定，取得 DOM 元素"></a>透過 ref 綁定，取得 DOM 元素</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; onMounted, ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> inputText = ref(<span class="literal">null</span>); <span class="comment">// 變數需跟綁定的ref一樣名稱</span></span><br><span class="line">    onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      inputText.value.focus(); <span class="comment">// 回傳後即可使用inputText</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      inputText, <span class="comment">// 回傳inputText</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">ref</span>=<span class="string">&quot;inputText&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span> // 綁定ref</span><br></pre></td></tr></table></figure><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> ref </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>$event事件回傳</title>
      <link href="2021/03/14/vue-event-return/"/>
      <url>2021/03/14/vue-event-return/</url>
      
        <content type="html"><![CDATA[<h1 id="event-事件回傳"><a href="#event-事件回傳" class="headerlink" title="$event 事件回傳"></a>$event 事件回傳</h1><p>取得事件的 target</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> clickFn = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(e.target);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      clickFn,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;clickFn($event)&quot;</span>&gt;</span>CLICK<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如有多個參數，$event 事件需放在最後面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> clickFn = <span class="function">(<span class="params">num, e</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(num, e.target);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      clickFn,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;clickFn(100, $event)&quot;</span>&gt;</span>CLICK<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> event </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>transition 動畫過渡組件</title>
      <link href="2021/03/14/transitions/"/>
      <url>2021/03/14/transitions/</url>
      
        <content type="html"><![CDATA[<h1 id="Enter-amp-Leave-Transitions"><a href="#Enter-amp-Leave-Transitions" class="headerlink" title="Enter &amp; Leave Transitions"></a>Enter &amp; Leave Transitions</h1><p>Vue.js 將過場漸變的效果包裝成一個獨立的 transition 元件， 再由開發者自行定義元素的進場 (Enter) 、退場 (Leave) 以及動畫過程漸變 (Transitions) 的樣式。動畫執行完後才會把 DOM 元素拔掉</p><a id="more"></a><p><img src="https://i.imgur.com/1AHgsrN.png" alt="transition圖片解說"><br>元素進場 (顯示) ：<br>v-enter-from: 進入的開始狀態。在插入元素之前添加，在插入元素之後刪除一幀。<br>v-enter-active: 進入的活動狀態。在整個進入階段應用。在插入元素之前添加，在過渡/動畫結束時將其刪除。此類可用於定義進入過渡的持續時間，延遲和緩和曲線。<br>v-enter-to: 進入的結束狀態。元素插入後添加了一幀（同時 v-enter-from 刪除），過渡/動畫結束後刪除。</p><p>元素退場 (消失) ：<br>v-leave-from: 離開的開始狀態。觸發離開過渡時立即添加，在一幀後移除。<br>v-leave-active: 離開的活動狀態。在整個離開階段應用。觸發離開過渡時立即添加，當過渡/動畫結束時將其移除。此類可用於定義離開過渡的持續時間，延遲和緩和曲線。<br>v-leave-to: 離開的結束狀態。觸發離開過渡（同時 v-leave-from 刪除）後添加一幀，在過渡/動畫結束時刪除。</p><h2 id="範例一-淡入淡出"><a href="#範例一-淡入淡出" class="headerlink" title="範例一: 淡入淡出"></a>範例一: 淡入淡出</h2><p>transition 定義 name=”fade”，style 將會加入 fade 樣式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> isAmin = ref(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      isAmin,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;isAmin = !isAmin&quot;</span>&gt;</span>Toggle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">&quot;fade&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;isAmin&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.fade-enter-active</span>,</span><br><span class="line"><span class="selector-class">.fade-leave-active</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: opacity <span class="number">0.5s</span> ease;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fade-enter-from</span>,</span><br><span class="line"><span class="selector-class">.fade-leave-to</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="範例二-使用-keyframes-做-bounce-動畫"><a href="#範例二-使用-keyframes-做-bounce-動畫" class="headerlink" title="範例二: 使用 keyframes 做 bounce 動畫"></a>範例二: 使用 keyframes 做 bounce 動畫</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> isAmin = ref(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      isAmin,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;isAmin = !isAmin&quot;</span>&gt;</span>Toggle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">&quot;bounce&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;isAmin&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.bounce-enter-active</span> &#123;</span><br><span class="line">  <span class="attribute">animation</span>: bounce-in <span class="number">0.5s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bounce-leave-active</span> &#123;</span><br><span class="line">  <span class="attribute">animation</span>: bounce-in <span class="number">0.5s</span> reverse;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> bounce-in &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.25</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="有-v-for-時需用-transition-group"><a href="#有-v-for-時需用-transition-group" class="headerlink" title="有 v-for 時需用 transition-group"></a>有 v-for 時需用 transition-group</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;list-demo&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;add&quot;</span>&gt;</span>Add<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;remove&quot;</span>&gt;</span>Remove<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">transition-group</span> <span class="attr">name</span>=<span class="string">&quot;list&quot;</span> <span class="attr">tag</span>=<span class="string">&quot;p&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span> <span class="attr">v-bind:key</span>=<span class="string">&quot;item&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; item &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">transition-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> transition </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>組件資料傳遞 emit</title>
      <link href="2021/03/14/components-emit/"/>
      <url>2021/03/14/components-emit/</url>
      
        <content type="html"><![CDATA[<h1 id="組件資料傳遞-emit-子傳父"><a href="#組件資料傳遞-emit-子傳父" class="headerlink" title="組件資料傳遞 emit (子傳父)"></a>組件資料傳遞 emit (子傳父)</h1><p>使用 emit 往上傳遞資料</p><a id="more"></a><p>App.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> EmitTest <span class="keyword">from</span> <span class="string">&quot;@/components/EmitTest.vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    EmitTest,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> clickFn = <span class="function">(<span class="params">num</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(num);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      clickFn,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">EmitTest</span> @<span class="attr">callBack</span>=<span class="string">&quot;clickFn&quot;</span> /&gt;</span> // @在emit定義的變數=&quot;父層Fn&quot;</span><br></pre></td></tr></table></figure><p>EmitTest.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; onMounted, ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params">props, context</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> num = ref(<span class="number">0</span>);</span><br><span class="line">    onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      context.emit(<span class="string">&quot;callBack&quot;</span>, num); <span class="comment">// emit(自定義變數, 要使用的參數)</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      num,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;num&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p>setup 接收兩個參數，前面為 props，第二個 context<br>使用 emit 也可以直接解構出來</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">setup</span>(<span class="params">props, &#123;emit&#125;</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> num = ref(<span class="number">0</span>);</span><br><span class="line">    onMounted(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">      emit(<span class="string">&quot;callBack&quot;</span>, num);</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      num</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="emits-的使用"><a href="#emits-的使用" class="headerlink" title="emits 的使用"></a>emits 的使用</h1><p>聲明有使用到的 emit，可以寫成 Array<br>emit 也可以寫成 object 來做驗證的動作<br>如驗證未通過，console 會跳出 warning 的提示來告訴開發者</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  emits: &#123;</span><br><span class="line">    callBack: <span class="function">(<span class="params">num</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> num.value === <span class="number">0</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params">props, &#123; emit &#125;</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> num = ref(<span class="number">1</span>);</span><br><span class="line">    onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      emit(<span class="string">&quot;callBack&quot;</span>, num);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      num,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><h1 id="計數器範例"><a href="#計數器範例" class="headerlink" title="計數器範例"></a>計數器範例</h1><p>App.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> EmitTest <span class="keyword">from</span> <span class="string">&quot;@/components/EmitTest.vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    EmitTest,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> handTimeOut = <span class="function">(<span class="params">num</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;time is over&quot;</span>, num.value);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      handTimeOut,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">EmitTest</span> @<span class="attr">TimeOut</span>=<span class="string">&quot;handTimeOut&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>EmitTest.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; onMounted, ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  emits: &#123;</span><br><span class="line">    TimeOut: <span class="function">(<span class="params">num</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (num.value === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params">props, &#123; emit &#125;</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> num = ref(<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">let</span> timer = <span class="literal">null</span>;</span><br><span class="line">    onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        num.value--;</span><br><span class="line">        <span class="keyword">if</span> (num.value === <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">          emit(<span class="string">&quot;TimeOut&quot;</span>, num);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;, <span class="number">1000</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      num,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;num&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> emit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>組件資料傳遞 Props</title>
      <link href="2021/03/11/components-props/"/>
      <url>2021/03/11/components-props/</url>
      
        <content type="html"><![CDATA[<h1 id="組件資料傳遞-Props-父傳子"><a href="#組件資料傳遞-Props-父傳子" class="headerlink" title="組件資料傳遞 Props (父傳子)"></a>組件資料傳遞 Props (父傳子)</h1><p>上層的 data 透過 props 往下傳，不會往上傳回 data，所以下層的資料改變不會影響到上層(data)</p><p>App.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> PropsTest <span class="keyword">from</span> <span class="string">&quot;@/components/PropsTest.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    PropsTest,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> data = ref(<span class="string">&quot;hello Vue!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> &#123; data &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">PropsTest</span> <span class="attr">:msg</span>=<span class="string">&quot;data&quot;</span> /&gt;</span> // :子層屬性=&quot;父層 data&quot;</span><br></pre></td></tr></table></figure><a id="more"></a><p>PropsTest.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  props: [<span class="string">&quot;msg&quot;</span>],</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; props &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;props.msg&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h1 id="Props-型態"><a href="#Props-型態" class="headerlink" title="Props 型態"></a>Props 型態</h1><p>props 雖可以為陣列，但建議使用<code>物件</code>表示，物件可以定義型別，還能設定<code>預設值</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">props: &#123;</span><br><span class="line">  msg: <span class="built_in">String</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Or</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">props: &#123;</span><br><span class="line">  msg: &#123;</span><br><span class="line">    type: <span class="built_in">String</span>,</span><br><span class="line">    <span class="keyword">default</span>: <span class="string">&#x27;HI&#x27;</span> <span class="comment">// 如上層未設定msg值，會顯示HI</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="Props-定義各個型別的預設值"><a href="#Props-定義各個型別的預設值" class="headerlink" title="Props 定義各個型別的預設值"></a>Props 定義各個型別的預設值</h1><p>父層</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> PropsTest <span class="keyword">from</span> <span class="string">&quot;@/components/PropsTest.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ref, reactive &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    PropsTest,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> string = ref(<span class="string">&quot;string&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> boolean = ref(<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">const</span> num = ref(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">const</span> array = reactive([]);</span><br><span class="line">    <span class="keyword">const</span> obj = reactive(&#123;&#125;);</span><br><span class="line">    <span class="keyword">const</span> clickFn = <span class="function">() =&gt;</span> &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123; string, boolean, num, array, obj, clickFn &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;PropsTest</span><br><span class="line">  :string=&quot;string&quot;</span><br><span class="line">  :boolean=&quot;boolean&quot;</span><br><span class="line">  :num=&quot;num&quot;</span><br><span class="line">  :array=&quot;array&quot;</span><br><span class="line">  :obj=&quot;obj&quot;</span><br><span class="line">  :clickFn=&quot;clickFn&quot;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><br>子層<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    string: &#123;</span><br><span class="line">      type: <span class="built_in">String</span>,</span><br><span class="line">      <span class="keyword">default</span>: <span class="string">&quot;string&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    boolean: &#123;</span><br><span class="line">      type: <span class="built_in">Boolean</span>,</span><br><span class="line">      <span class="keyword">default</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    num: &#123;</span><br><span class="line">      type: <span class="built_in">Number</span>,</span><br><span class="line">      <span class="keyword">default</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    array: &#123;</span><br><span class="line">      type: <span class="built_in">Array</span>,</span><br><span class="line">      <span class="keyword">default</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        [];</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    obj: &#123;</span><br><span class="line">      type: <span class="built_in">Object</span>,</span><br><span class="line">      <span class="keyword">default</span>: <span class="function">() =&gt;</span> (&#123;&#125;),</span><br><span class="line">      <span class="comment">// 等於</span></span><br><span class="line">      <span class="comment">// default: ()=&gt;&#123;</span></span><br><span class="line">      <span class="comment">//   return &#123;&#125;</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    clickFn: &#123;</span><br><span class="line">      type: <span class="built_in">Function</span>,</span><br><span class="line">      <span class="keyword">default</span>: <span class="function">() =&gt;</span> &#123;&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params">props</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; props &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> props </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue Component 組件基本介紹</title>
      <link href="2021/03/10/components-base/"/>
      <url>2021/03/10/components-base/</url>
      
        <content type="html"><![CDATA[<h1 id="組件基本介紹"><a href="#組件基本介紹" class="headerlink" title="組件基本介紹"></a>組件基本介紹</h1><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;./router&quot;</span>;</span><br><span class="line"></span><br><span class="line">createApp(App).use(router).mount(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><a id="more"></a><p>main.js 為網站主程式的進入點，Vue 的初始化操作都在此設定<br>只要有使用到擴充功能，都要用<code>.use</code> 串接到主程式</p><hr><h1 id="拆分組件"><a href="#拆分組件" class="headerlink" title="拆分組件"></a>拆分組件</h1><p>App.vue<br>JS</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Header <span class="keyword">from</span> <span class="string">&quot;@/components/Header.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Footer <span class="keyword">from</span> <span class="string">&quot;@/components/Footer.vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    Header,</span><br><span class="line">    Footer,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>template</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>CSS</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">-webkit-box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">-moz-box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Microsoft JhengHei&quot;</span>, <span class="string">&quot;Heiti TC&quot;</span>, <span class="string">&quot;sans-serif&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@是給 VueJs 使用的，代表 src 資料夾，CSS 使用時須在前面加上波浪符<code>~@</code>，使用@取代../路徑，避免 bundle 的時候出錯</p><p>Header.vue<br>改寫成 SCSS 時須加上 <code>lang=&quot;scss&quot;</code>，並將 RWD @media 放進自己的 class<br><code>scoped</code> 只限制此檔案元素的 style</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line"><span class="selector-tag">h6</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: greenyellow;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">header</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#373c3f</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">97px</span>;</span><br><span class="line">  @media screen and (max-width: 640px) &#123;</span><br><span class="line">    <span class="selector-tag">transition</span>: <span class="selector-tag">height</span> 0.2<span class="selector-tag">s</span>;</span><br><span class="line">    <span class="selector-tag">height</span>: 37<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">overflow</span>: <span class="selector-tag">hidden</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  &gt; <span class="selector-tag">nav</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1024px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    @media screen and (max-width: 1044px) &#123;</span><br><span class="line">      <span class="selector-tag">width</span>: 100%;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">640px</span>) &#123;</span><br><span class="line">      <span class="selector-tag">width</span>: 100%;</span><br><span class="line">      <span class="selector-tag">height</span>: 232<span class="selector-tag">px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/<span class="selector-tag">style</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="注入全域的-CSS"><a href="#注入全域的-CSS" class="headerlink" title="注入全域的 CSS"></a>注入全域的 CSS</h3><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;@/assets/css/reset.css&quot;</span>;</span><br></pre></td></tr></table></figure><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> Vue-cli </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>環境建置 &amp; Vue-cli專案</title>
      <link href="2021/03/08/vue-cli/"/>
      <url>2021/03/08/vue-cli/</url>
      
        <content type="html"><![CDATA[<h1 id="Node-js-環境建置"><a href="#Node-js-環境建置" class="headerlink" title="Node.js 環境建置"></a>Node.js 環境建置</h1><h2 id="下載-NVM"><a href="#下載-NVM" class="headerlink" title="下載 NVM"></a>下載 NVM</h2><p>nvm 是 Node.js 的版本管理器 (version manager)，可在同一台主機上安裝多個版本的 Node.js 環境，因為不同專案可能會使用不同的 Node.js 版本，那就需要透過一個版本管理器來切換不同的 Node.js 版本。<br><br>NVM install - 點選右邊的 releases<br><a href="https://github.com/coreybutler/nvm-windows">https://github.com/coreybutler/nvm-windows</a></p><a id="more"></a><p>NVM 常用指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nvm list // 列出目前電腦有安裝的 nodejs 版本</span><br><span class="line">nvm list available // 目前網路上可用的 nodejs 版本列表</span><br><span class="line">nvm install v12.19.0 // 該 nodejs 版本下載安裝</span><br><span class="line">nvm uninstall v12.19.0 // 移除該 nodejs 版本</span><br><span class="line">nvm use v12.19.0 // 使用該 nodejs 版本</span><br><span class="line">nvm -v // 目前該 nvm 版本</span><br></pre></td></tr></table></figure><h2 id="下載-node-js"><a href="#下載-node-js" class="headerlink" title="下載 node.js"></a>下載 node.js</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nvm install v12.19.0 // 該 nodejs 版本下載安裝</span><br><span class="line">nvm use v12.19.0 // 使用該 nodejs 版本</span><br><span class="line">node -v // 目前該 node 版本</span><br></pre></td></tr></table></figure><h2 id="檢查-npm-是否安裝成功"><a href="#檢查-npm-是否安裝成功" class="headerlink" title="檢查 npm 是否安裝成功"></a>檢查 npm 是否安裝成功</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v // 目前該 npm 版本</span><br></pre></td></tr></table></figure><p>npm 常用指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm -v // 查看目前npm的版本</span><br><span class="line">npm install &lt;package&gt; // 安裝npm套件</span><br><span class="line">npm install &lt;package&gt;  -D // 安裝開發階段套件</span><br><span class="line">npm install &lt;package&gt;  -S // 安裝上線階段套件</span><br><span class="line">npm rm &lt;package&gt; // 移除該套件</span><br></pre></td></tr></table></figure><hr><h1 id="安裝-Vue-cli"><a href="#安裝-Vue-cli" class="headerlink" title="安裝 Vue-cli"></a>安裝 Vue-cli</h1><p>Vue CLI 是一個基於 Vue.js 進行快速開發的完整系統，確保各種構建工具能夠平穩銜接，使開發人員可以專注在撰寫應用上，而不必花好幾天去糾結配置的問題。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br></pre></td></tr></table></figure><h1 id="建構一個新的-Vue-專案"><a href="#建構一個新的-Vue-專案" class="headerlink" title="建構一個新的 Vue 專案"></a>建構一個新的 Vue 專案</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vue create my-project // my-project 為要創建的資料夾名稱</span><br><span class="line"><span class="comment"># OR</span></span><br><span class="line">vue ui // ui介面設定</span><br></pre></td></tr></table></figure><br>Please pick a preset: (請選擇一個預設)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Manually select features //手動選擇功能</span><br></pre></td></tr></table></figure><br>Check the features needed for your project: (檢查項目所需的功能)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Choose Vue version //選擇 Vue 版本</span><br><span class="line">Babel //JavaScript 轉譯器，可將 ES6+ 程式碼轉為等效的 ES5 程式碼</span><br><span class="line">Router // 路由</span><br><span class="line">CSS pre-processors //CSS 預處理器</span><br></pre></td></tr></table></figure><br>Choose a version of Vue.js that you want to start the project with (選擇Vue版本)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3.x (Preview)</span><br></pre></td></tr></table></figure><br>Use history mode for router?<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Y</span><br></pre></td></tr></table></figure><br>Pick a CSS pre-processor<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sass/SCSS (with node-sass)</span><br></pre></td></tr></table></figure><br>Where do you prefer placing config for Babel, ESLint, etc.?<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">In package.json</span><br></pre></td></tr></table></figure><br>Save this as a preset for future projects?<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Y</span><br></pre></td></tr></table></figure><p>Save preset as: 直接 ENTER<br><br></p><p>建立完後啟動 serve</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> my-project // 進入資料夾</span><br><span class="line">npm run serve // 開啟serve</span><br><span class="line">npm run build // 建立dist</span><br></pre></td></tr></table></figure><hr><h1 id="Vue-cli-專案結構解析"><a href="#Vue-cli-專案結構解析" class="headerlink" title="Vue-cli 專案結構解析"></a>Vue-cli 專案結構解析</h1><p>node_modules：透過 npm 下載的套件跟工具都會放在這個資料夾裡面<br><br>package.json：關於這整包專案所有的資訊，包含安裝套件版本、專案版本、npm 指令都可以在這個 json 檔案裡面找得到，之後要搬移專案重新安裝套件也需要靠這個 json 檔案<br><br>package-lock.json：專門紀錄 package.json 裡面更細節的內容，例如安裝的套件的詳細版本，或是確認你的 dependency (依賴)是被哪個函式庫所要求的等等<br><br>babel.config.js: babel 轉換 JS 時所用的套件</p><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> Vue-cli </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>非同步處理 Axios</title>
      <link href="2021/03/05/axios-api/"/>
      <url>2021/03/05/axios-api/</url>
      
        <content type="html"><![CDATA[<h1 id="使用-Axios-取得-API"><a href="#使用-Axios-取得-API" class="headerlink" title="使用 Axios 取得 API"></a>使用 Axios 取得 API</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; onMounted &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> app = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 在DOM元素渲染完成後執行</span></span><br><span class="line">      axios</span><br><span class="line">        .get(<span class="string">&quot;https://vue-lessons-api.herokuapp.com/photo/list&quot;</span>)</span><br><span class="line">        .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(res.data);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="Axios-渲染資料"><a href="#Axios-渲染資料" class="headerlink" title="Axios 渲染資料"></a>Axios 渲染資料</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &lt;img</span><br><span class="line">      v-for=&quot;(item, i) in imgArray.arr&quot;</span><br><span class="line">      :key=&quot;item.url&quot;</span><br><span class="line">      v-show=&quot;ImgIdx === i&quot;</span><br><span class="line">      class=&quot;img&quot;</span><br><span class="line">      :src=&quot;item.url&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btnbox&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;ImgIdxRemove&quot;</span>&gt;</span>上一張<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;ImgIdxAdd&quot;</span>&gt;</span>下一張<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; onMounted, reactive, ref &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> app = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> imgArray = reactive(&#123; <span class="attr">arr</span>: [] &#125;); <span class="comment">// 將取得的資料放進陣列</span></span><br><span class="line">    <span class="keyword">const</span> ImgIdx = ref(<span class="number">0</span>); <span class="comment">// 圖片索引</span></span><br><span class="line">    <span class="keyword">const</span> ImgIdxAdd = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      ImgIdx.value++;</span><br><span class="line">      <span class="keyword">if</span> (ImgIdx.value &gt; imgArray.arr.length - <span class="number">1</span>) &#123;</span><br><span class="line">        ImgIdx.value = <span class="number">0</span>; <span class="comment">// 大於總數量時返回第一張</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> ImgIdxRemove = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      ImgIdx.value--;</span><br><span class="line">      <span class="keyword">if</span> (ImgIdx.value &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        ImgIdx.value = imgArray.arr.length - <span class="number">1</span>; <span class="comment">//小於0時返回最後一張</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      axios</span><br><span class="line">        .get(<span class="string">&quot;https://vue-lessons-api.herokuapp.com/photo/list&quot;</span>)</span><br><span class="line">        .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          imgArray.arr = res.data;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123; imgArray, ImgIdx, ImgIdxAdd, ImgIdxRemove &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="加入-loading-效果"><a href="#加入-loading-效果" class="headerlink" title="加入 loading 效果"></a>加入 loading 效果</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;isLoad&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &lt;img</span><br><span class="line">      v-for=&quot;(item, i) in imgArray.arr&quot;</span><br><span class="line">      :key=&quot;item.url&quot;</span><br><span class="line">      v-show=&quot;ImgIdx === i&quot;</span><br><span class="line">      class=&quot;img&quot;</span><br><span class="line">      :src=&quot;item.url&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btnbox&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;isLoad&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;ImgIdxRemove&quot;</span>&gt;</span>上一張<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;ImgIdxAdd&quot;</span>&gt;</span>下一張<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-if</span>=<span class="string">&quot;!isLoad&quot;</span> <span class="attr">class</span>=<span class="string">&quot;load&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./images/load.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> imgArray = reactive(&#123; <span class="attr">arr</span>: [] &#125;); <span class="comment">// 將取得的資料放進陣列</span></span><br><span class="line"><span class="keyword">const</span> ImgIdx = ref(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">const</span> isLoad = ref(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">const</span> ImgIdxAdd = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  ImgIdx.value++;</span><br><span class="line">  <span class="keyword">if</span> (ImgIdx.value &gt; imgArray.arr.length - <span class="number">1</span>) &#123;</span><br><span class="line">    ImgIdx.value = <span class="number">0</span>; <span class="comment">// 大於總數量時返回第一張</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> ImgIdxRemove = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  ImgIdx.value--;</span><br><span class="line">  <span class="keyword">if</span> (ImgIdx.value &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    ImgIdx.value = imgArray.arr.length - <span class="number">1</span>; <span class="comment">//小於0時返回最後一張</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> handImgLoad = <span class="function">(<span class="params">imgArr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> i = <span class="number">0</span>; <span class="comment">// 透過i記錄loading跑完沒</span></span><br><span class="line">  imgArr.forEach(<span class="function">(<span class="params">image</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> newImage = <span class="keyword">new</span> Image(); <span class="comment">// 建立Image實體</span></span><br><span class="line">    newImage.src = image.url; <span class="comment">// 透過src去觸發onload事件</span></span><br><span class="line">    newImage.onload = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      i++;</span><br><span class="line">      <span class="keyword">if</span> (imgArr.length === i) &#123;</span><br><span class="line">        <span class="comment">//圖片跑完後執行</span></span><br><span class="line">        imgArray.arr = imgArr;</span><br><span class="line">        isLoad.value = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  axios.get(<span class="string">&quot;https://vue-lessons-api.herokuapp.com/photo/list&quot;</span>).then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    handImgLoad(res.data);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">return</span> &#123; imgArray, ImgIdx, isLoad, ImgIdxAdd, ImgIdxRemove &#125;;</span><br></pre></td></tr></table></figure><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> axios </tag>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE的生命週期</title>
      <link href="2021/03/05/lifecycle-hooks/"/>
      <url>2021/03/05/lifecycle-hooks/</url>
      
        <content type="html"><![CDATA[<h1 id="VUE-的生命週期-Lifecycle-Hooks"><a href="#VUE-的生命週期-Lifecycle-Hooks" class="headerlink" title="VUE 的生命週期(Lifecycle Hooks)"></a>VUE 的生命週期(Lifecycle Hooks)</h1><p><strong>setup</strong> =&gt; vue 掛載到 app 上面後執行<br><strong>onBeforeMount</strong> =&gt; DOM 渲染前執行<br><strong>onMounted</strong> =&gt; DOM 渲染完成後執行<br><strong>onBeforeUpdate</strong> =&gt; 資料更新 DOM 更改前執行<br><strong>onUpdated</strong> =&gt; 資料更新 DOM 更改後執行</p><a id="more"></a><p><strong>onBeforeUnmount</strong> =&gt; 組件銷毀前執行<br><strong>onUnmounted</strong> =&gt; 組件銷毀後執行<br><strong>onErrorCaptured</strong> =&gt; 當組件發出錯誤時後調用<br><strong>onRenderTracked</strong> =&gt; 監控 virtual DOM 重新選染時調用 ( 此事件告訴你操作什麼監聽了組件以及該操作的物件)<br><strong>onRenderTriggered</strong> =&gt; 監控 virtual DOM 重新選染時調用 ( 此事件告訴你操作什麼觸發了重新渲染，以及該操作的物件)</p><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> 生命週期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3基本操作-2</title>
      <link href="2021/03/04/vue3-base2/"/>
      <url>2021/03/04/vue3-base2/</url>
      
        <content type="html"><![CDATA[<h1 id="computed"><a href="#computed" class="headerlink" title="computed"></a>computed</h1><h2 id="範例-1-自動長出-menu-高度"><a href="#範例-1-自動長出-menu-高度" class="headerlink" title="範例 1: 自動長出 menu 高度"></a>範例 1: 自動長出 menu 高度</h2><p>計算屬性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">&quot;HandListShow&quot;</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>菜單<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;height: toggleH&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(list, idx) in listArr&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;list&quot;</span>&gt;</span>&#123;&#123;list.name&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ref, reactive, computed &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> isOpen = ref(<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">const</span> listArr = reactive([</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;蛋糕&quot;</span>, <span class="attr">money</span>: <span class="number">3200</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;紅茶拿鐵&quot;</span>, <span class="attr">money</span>: <span class="number">100</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;義大利麵&quot;</span>, <span class="attr">money</span>: <span class="number">500</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;玉米濃湯&quot;</span>, <span class="attr">money</span>: <span class="number">300</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;海鮮燉飯&quot;</span>, <span class="attr">money</span>: <span class="number">1600</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;夏威夷披薩&quot;</span>, <span class="attr">money</span>: <span class="number">900</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;牛肉麵&quot;</span>, <span class="attr">money</span>: <span class="number">2000</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;法國麵包&quot;</span>, <span class="attr">money</span>: <span class="number">1800</span> &#125;,</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> HandListShow = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      isOpen.value = !isOpen.value;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> toggleH = computed(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> isOpen.value ? <span class="string">`<span class="subst">$&#123;listArr.length * <span class="number">40</span>&#125;</span>px`</span> : <span class="number">0</span>;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      isOpen,</span><br><span class="line">      listArr,</span><br><span class="line">      HandListShow,</span><br><span class="line">      toggleH,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Computed-跟-Methods"><a href="#Computed-跟-Methods" class="headerlink" title="Computed 跟 Methods"></a>Computed 跟 Methods</h3><p><strong>computed</strong></p><p>會依據計算的資料<strong>進行緩存</strong>，只要你的資料沒有重新被更改，你的 computed 不會被重新計算執行，如不須傳入參數，建議都使用 computed 計算</p><p><strong>methods</strong></p><p>雖可以達到一樣的效果，但 methods<strong>不會進行緩存</strong>，每次都會重新執行 ，可以<strong>傳入參數</strong>進行處理</p><h2 id="範例-2-計算資料"><a href="#範例-2-計算資料" class="headerlink" title="範例 2: 計算資料"></a>範例 2: 計算資料</h2><p>利用 computed 取得資料</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">&quot;HandListShow&quot;</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>菜單<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;height: toggleH&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(list, idx) in newMenu&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;list.menu&quot;</span>&gt;</span>&#123;&#123;list.menu&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ref, reactive, computed &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> isOpen = ref(<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">const</span> listArr = reactive([</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;蛋糕&quot;</span>, <span class="attr">money</span>: <span class="number">3200</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;紅茶拿鐵&quot;</span>, <span class="attr">money</span>: <span class="number">100</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;義大利麵&quot;</span>, <span class="attr">money</span>: <span class="number">500</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;玉米濃湯&quot;</span>, <span class="attr">money</span>: <span class="number">300</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;海鮮燉飯&quot;</span>, <span class="attr">money</span>: <span class="number">1600</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;夏威夷披薩&quot;</span>, <span class="attr">money</span>: <span class="number">900</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;牛肉麵&quot;</span>, <span class="attr">money</span>: <span class="number">2000</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;法國麵包&quot;</span>, <span class="attr">money</span>: <span class="number">1800</span> &#125;,</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> HandListShow = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      isOpen.value = !isOpen.value;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> toggleH = computed(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> isOpen.value ? <span class="string">`<span class="subst">$&#123;listArr.length * <span class="number">40</span>&#125;</span>px`</span> : <span class="number">0</span>;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> newMenu = computed(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> map = listArr.map(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123; <span class="attr">menu</span>: <span class="string">`<span class="subst">$&#123;item.name&#125;</span>, $: <span class="subst">$&#123;item.money&#125;</span>`</span> &#125;;</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">return</span> map;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      isOpen,</span><br><span class="line">      newMenu,</span><br><span class="line">      HandListShow,</span><br><span class="line">      toggleH,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="範例三-資料篩選-Data-Filter"><a href="#範例三-資料篩選-Data-Filter" class="headerlink" title="範例三: 資料篩選 Data Filter"></a>範例三: 資料篩選 Data Filter</h2><p>v-for 跟 v-if 官方不推薦一起使用，會有優先順序的問題，v-if 會先執行，v-for 的值會變 undefined<br>正確的做法應該要先透過 computed 把資料篩選出來後再進行 v-for<br>只要被 computed 重新包裝過後，須使用<code>.value</code>取得資料</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">&quot;HandListShow&quot;</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>課程列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;height: BoxHeight&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(list, idx) in filterData&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;list.money&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123;idx + 1&#125;&#125;. &#123;&#123;list.name&#125;&#125; =&gt; $&#123;&#123;list.money&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ref, reactive, computed &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> isOpen = ref(<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">const</span> listArr = reactive([</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;蛋糕&quot;</span>, <span class="attr">money</span>: <span class="number">3200</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;紅茶拿鐵&quot;</span>, <span class="attr">money</span>: <span class="number">100</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;義大利麵&quot;</span>, <span class="attr">money</span>: <span class="number">500</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;玉米濃湯&quot;</span>, <span class="attr">money</span>: <span class="number">300</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;海鮮燉飯&quot;</span>, <span class="attr">money</span>: <span class="number">1600</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;夏威夷披薩&quot;</span>, <span class="attr">money</span>: <span class="number">900</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;牛肉麵&quot;</span>, <span class="attr">money</span>: <span class="number">2000</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;法國麵包&quot;</span>, <span class="attr">money</span>: <span class="number">1800</span> &#125;,</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> filterData = computed(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> filter = listArr.filter(<span class="function">(<span class="params">item</span>) =&gt;</span> item.money &gt; <span class="number">500</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(filter);</span><br><span class="line">      <span class="keyword">return</span> filter;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> BoxHeight = computed(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 被 computed 重新包裝過後，須使用`.value`取得資料</span></span><br><span class="line">      <span class="keyword">return</span> isOpen.value ? <span class="string">`<span class="subst">$&#123;filterData.value.length * <span class="number">40</span>&#125;</span>px`</span> : <span class="string">&quot;0px&quot;</span>;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> HandListShow = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      isOpen.value = !isOpen.value;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      isOpen,</span><br><span class="line">      filterData,</span><br><span class="line">      HandListShow,</span><br><span class="line">      BoxHeight,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><h1 id="watch"><a href="#watch" class="headerlink" title="watch"></a>watch</h1><p>資料監控<br>可帶入兩個參數，如資料被改變會自動執行 callback</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">watch(要監控的資料, <span class="function">(<span class="params">新資料, 舊資料</span>) =&gt;</span> &#123;&#125;);</span><br></pre></td></tr></table></figure><h2 id="監控-ref"><a href="#監控-ref" class="headerlink" title="監控 ref"></a>監控 ref</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ref, reactive, watch &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> idx = ref(<span class="number">0</span>);</span><br><span class="line">    watch(idx, <span class="function">(<span class="params">newIdx, oldIdx</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;newIdx:&quot;</span>, newIdx, <span class="string">&quot;oldIdx:&quot;</span>, oldIdx);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      idx.value++;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="監控-reactive"><a href="#監控-reactive" class="headerlink" title="監控 reactive"></a>監控 reactive</h2><p>watch 監控的值為 getter，只能被讀取的值，需透過函式回傳 reactive 的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ref, reactive, watch &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> data = reactive(&#123; <span class="attr">idx</span>: <span class="number">0</span> &#125;);</span><br><span class="line">    watch(</span><br><span class="line">      () =&gt; data.idx, <span class="comment">// watch監控的值為getter，只能被讀取的值</span></span><br><span class="line">      (newIdx, oldIdx) =&gt; &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;newIdx:&quot;</span>, newIdx, <span class="string">&quot;oldIdx:&quot;</span>, oldIdx);</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">    <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      data.idx++;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="監控整個-Array-或-object"><a href="#監控整個-Array-或-object" class="headerlink" title="監控整個 Array 或 object"></a>監控整個 Array 或 object</h2><p>ref 不能監控整個物件的變動，只能監控單一值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ref, reactive, watch &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> refObj = ref(&#123; <span class="attr">idx</span>: <span class="number">0</span> &#125;);</span><br><span class="line">    <span class="keyword">const</span> reactiveObj = reactive(&#123; <span class="attr">idx</span>: <span class="number">0</span> &#125;);</span><br><span class="line">    watch(refObj, <span class="function">(<span class="params">newIdx</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;ref&quot;</span>, refObj);</span><br><span class="line">    &#125;);</span><br><span class="line">    watch(reactiveObj, <span class="function">(<span class="params">newIdx</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;reactiveObj&quot;</span>, reactiveObj);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      refObj.value.idx++;</span><br><span class="line">      reactiveObj.idx++;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123; refObj, reactiveObj &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>如需使用 ref 做深層監控，可以使用 <strong>deep</strong>，但非常耗效能，不建議使用，建議監控單一值就好</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ref, reactive, watch &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> data = ref(&#123; <span class="attr">user</span>: &#123;&#125; &#125;);</span><br><span class="line"></span><br><span class="line">    watch(</span><br><span class="line">      data,</span><br><span class="line">      (newVal) =&gt; &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(newVal);</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123; <span class="attr">deep</span>: <span class="literal">true</span> &#125;</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      data.value.user[<span class="string">&quot;name&quot;</span>] = <span class="string">&quot;波比&quot;</span>;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><h1 id="watchEffect"><a href="#watchEffect" class="headerlink" title="watchEffect"></a>watchEffect</h1><p>不須傳入要監控的值，值在還沒變動時就會開始監控<br>有寫進 watchEffect 的資料都會被讀取，即使是沒有改變的值也會再被 show 出來</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ref, reactive, watchEffect &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> num = ref(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">const</span> numData = reactive(&#123; <span class="attr">idx</span>: <span class="number">0</span> &#125;);</span><br><span class="line"></span><br><span class="line">    watchEffect(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(num.value);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      num.value++;</span><br><span class="line">      numData.idx++;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="停止-watchEffect-的監控"><a href="#停止-watchEffect-的監控" class="headerlink" title="停止 watchEffect 的監控"></a>停止 watchEffect 的監控</h2><p>給 watchEffect 自定義一個變數，並執行，將會停止 watchEffect</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ref, reactive, watchEffect &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> num = ref(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">const</span> numData = reactive(&#123; <span class="attr">idx</span>: <span class="number">0</span> &#125;);</span><br><span class="line">    <span class="keyword">let</span> timer = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">const</span> stop = watchEffect(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(num.value);</span><br><span class="line">      <span class="keyword">if</span> (num.value &gt;= <span class="number">4</span>) &#123;</span><br><span class="line">        stop(); <span class="comment">// 停止watchEffect</span></span><br><span class="line">        <span class="built_in">clearInterval</span>(timer); <span class="comment">// watchEffect關閉後不會停止setTimeout，需要再clearInterval</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      num.value++;</span><br><span class="line">      numData.idx++;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><p>如果這篇筆記有幫助，麻煩請幫我按五下 Liker，給我一點鼓勵唷！按讚是免錢滴 😀</p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> VueJs </tag>
            
            <tag> computed </tag>
            
            <tag> watch </tag>
            
            <tag> watchEffect </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3基本操作-1</title>
      <link href="2021/03/02/vue3-base1/"/>
      <url>2021/03/02/vue3-base1/</url>
      
        <content type="html"><![CDATA[<h1 id="vue-js-的起手式"><a href="#vue-js-的起手式" class="headerlink" title="vue.js 的起手式"></a>vue.js 的起手式</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://unpkg.com/vue@next&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handAddInt&quot;</span>&gt;</span>Add<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ref &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> msg = ref(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">const</span> handAddInt = <span class="function">() =&gt;</span> msg.value++;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="comment">// 變數回傳到模版</span></span><br><span class="line">      msg,</span><br><span class="line">      handAddInt,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">Vue.createApp(App).mount(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><p>以往 VUE2 使用 new Vue 創建實體，VUE3 使用 createApp 來創建應用程式(App)的實體，並掛載到 DOM 上<br>setup() 放入所有跟 vue.js 相關的操作內容<br>return 放入要回傳到 HTML 的資料<br>透過 ref 讓資料做綁定，ref 需要透過.value 存取資料</p><h1 id="ref-amp-reactive"><a href="#ref-amp-reactive" class="headerlink" title="ref &amp; reactive"></a>ref &amp; reactive</h1><h2 id="選擇-ref-還是-reactive"><a href="#選擇-ref-還是-reactive" class="headerlink" title="選擇 ref 還是 reactive"></a>選擇 ref 還是 reactive</h2><p>在大多數情況下兩者可以互相替換使用，主要取決於個人喜好或者團隊習慣，根據具體情況去決定要使用哪個就好</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;message.text&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ref, reactive &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> msg = ref(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> message = reactive(&#123; <span class="attr">text</span>: <span class="string">&quot;hello&quot;</span> &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      msg,</span><br><span class="line">      message,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="ref"><a href="#ref" class="headerlink" title="ref()"></a>ref()</h2><p>可以接受任何型態的資料，但是不會對物件或陣列內部的屬性變動做監聽，需要透過<code>.value</code>存取資料。</p><h2 id="reactive"><a href="#reactive" class="headerlink" title="reactive()"></a>reactive()</h2><p>只能接受物件或陣列，可以做深層的監聽，以及訪問資料不需要<code>.value</code></p><hr><h1 id="v-model-資料雙向綁定"><a href="#v-model-資料雙向綁定" class="headerlink" title="v-model 資料雙向綁定"></a>v-model 資料雙向綁定</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;msg&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;message.text&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message.text&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ref, reactive &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> msg = ref(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> message = reactive(&#123; <span class="attr">text</span>: <span class="string">&quot;hello&quot;</span> &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      msg,</span><br><span class="line">      message,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><h1 id="v-on-Event-事件綁定"><a href="#v-on-Event-事件綁定" class="headerlink" title="v-on:Event 事件綁定"></a>v-on:Event 事件綁定</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addCount&quot;</span>&gt;</span>Add<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;reduceCount&quot;</span>&gt;</span>Reduce<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ref &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> count = ref(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">const</span> addCount = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      count.value++;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> reduceCount = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      count.value--;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      count,</span><br><span class="line">      addCount,</span><br><span class="line">      reduceCount,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><h1 id="readonly"><a href="#readonly" class="headerlink" title="readonly"></a>readonly</h1><p>readonly  就是讓你的  ref  或是  reactive  的資料只可以讀取不可以被修改<br>非常適合用在參數傳遞的時候避免不小心被修改資料</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ref, readonly &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> count = ref(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">const</span> copyCount = readonly(count);</span><br><span class="line">    <span class="keyword">const</span> addCount = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      copyCount.value++;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> reduceCount = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      copyCount.value--;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      count,</span><br><span class="line">      addCount,</span><br><span class="line">      reduceCount,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>點擊按鈕時 copyCount 無法被修改</p><hr><h1 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, idx) in dogs&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.name&quot;</span>&gt;</span>&#123;&#123;idx+1&#125;&#125;-&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; reactive &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> dogs = reactive([</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;蝴蝶犬&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;柴犬&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;博美犬&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;哈士奇&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;法國鬥牛犬&quot;</span> &#125;,</span><br><span class="line">    ]);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      dogs,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="KEY"><a href="#KEY" class="headerlink" title="KEY"></a>KEY</h2><p>為了不要重複渲染，v-for 必須加上 key，修改資料時就不會全部的 DOM 一起修改<br>使用 v-for 時一定要給 key<br>使用 v-for 時不要拿索引當 key<br>使用唯一的值當 key 的值</p><hr><h1 id="v-if-與-v-show"><a href="#v-if-與-v-show" class="headerlink" title="v-if 與 v-show"></a>v-if 與 v-show</h1><p>顯示、隱藏 DOM 元素</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>&#123;&#123;text&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>&#123;&#123;text&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handDomShow&quot;</span>&gt;</span>show text<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; ref &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> isShow = ref(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">const</span> text = ref(<span class="string">&quot;hello VUE!&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> handDomShow = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      isShow.value = !isShow.value;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      isShow,</span><br><span class="line">      text,</span><br><span class="line">      handDomShow,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h2><p>直接將 DOM 從頁面上移除跟加入<br>v-if 可以減少渲染速度的效能<br>可用於權限或一開始就不該出現的區塊<br>如果是 DOM 元素切換的功能，消耗的資源比較高，建議用 v-show</p><h2 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h2><p>透過 CSS 的 display : none; 跟 display : block; 來顯示關閉<br>v-show 可以提升切換速度效能<br>適合做 tab 切換的功能</p><hr><h1 id="v-bind-attribute-屬性綁定"><a href="#v-bind-attribute-屬性綁定" class="headerlink" title="v-bind:attribute 屬性綁定"></a>v-bind:attribute 屬性綁定</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.red</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.blue</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  &lt;li</span><br><span class="line">    v-for=&quot;(list, idx) in listArr&quot;</span><br><span class="line">    v-bind:class=&quot;list.status&quot;</span><br><span class="line">    v-bind:key=&quot;list.name&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &#123;&#123;idx + 1&#125;&#125;. &#123;&#123;list.name&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; reactive &#125; = Vue;</span><br><span class="line"><span class="keyword">const</span> App = &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> listArr = reactive([</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;蝴蝶犬&quot;</span>, <span class="attr">status</span>: <span class="string">&quot;red&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;柴犬&quot;</span>, <span class="attr">status</span>: <span class="string">&quot;blue&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;博美犬&quot;</span>, <span class="attr">status</span>: <span class="string">&quot;red&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;哈士奇&quot;</span>, <span class="attr">status</span>: <span class="string">&quot;red&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;法國鬥牛犬&quot;</span>, <span class="attr">status</span>: <span class="string">&quot;blue&quot;</span> &#125;,</span><br><span class="line">    ]);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      listArr,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>如要綁定兩個以上的 class 可寫成</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;[&#x27;box&#x27;, &#123;open: isOpen&#125;]&quot;</span></span><br></pre></td></tr></table></figure><hr><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> javascript </tag>
            
            <tag> ref </tag>
            
            <tag> reactive </tag>
            
            <tag> v-model </tag>
            
            <tag> v-on </tag>
            
            <tag> readonly </tag>
            
            <tag> v-for </tag>
            
            <tag> v-show </tag>
            
            <tag> v-if </tag>
            
            <tag> v-bind </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js 與 npm 更新的方式</title>
      <link href="2021/02/08/nodeJS-update/"/>
      <url>2021/02/08/nodeJS-update/</url>
      
        <content type="html"><![CDATA[<h2 id="Node-js-更新"><a href="#Node-js-更新" class="headerlink" title="Node.js 更新"></a>Node.js 更新</h2><h3 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm cache clean -f</span><br><span class="line">npm install -g n</span><br><span class="line"><span class="comment">// 若要更新到最後一個版本</span></span><br><span class="line">n latest</span><br><span class="line"><span class="comment">// 若要更新到穩定版本</span></span><br><span class="line">n stable</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h3><p>上面的方法用在 windows 是行不通的，由於 n 模塊不支援 windows，需在瀏覽器中打開 node 官網下載 LTS 版本的 node 安裝包，安裝後覆蓋同路徑即可。<br><br>查看 node 安裝路徑<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">where</span> node</span><br></pre></td></tr></table></figure><h2 id="檢查-Node-js-版本"><a href="#檢查-Node-js-版本" class="headerlink" title="檢查 Node.js 版本"></a>檢查 Node.js 版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><h2 id="NPM-更新"><a href="#NPM-更新" class="headerlink" title="NPM 更新"></a>NPM 更新</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g npm</span><br></pre></td></tr></table></figure><h2 id="檢查-NPM-版本"><a href="#檢查-NPM-版本" class="headerlink" title="檢查 NPM 版本"></a>檢查 NPM 版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>以上是我的學習筆記，希望也有幫助到你哦 😀<br></p>]]></content>
      
      
      <categories>
          
          <category> nodeJs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodeJs </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
